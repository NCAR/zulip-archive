[
    {
        "content": "<p>I am trying to create a Python wrapper for Fortan code using Cython but i need help to split the Cython module to pxd and pyx files and sharing it with another module. I just wonder that is there anybody in the list that has Cython experience  and willing to help me to pass couple of issue in the prototype application.</p>",
        "id": 34573,
        "sender_full_name": "Ufuk Turuncoglu",
        "timestamp": 1623825613
    },
    {
        "content": "<p>Ccing <span class=\"user-mention\" data-user-id=\"97\">@Austin Kootz</span>, <span class=\"user-mention\" data-user-id=\"18\">@Orhan Eroglu</span> - -The resident experts for interfacing Python with Fortran -- in case they are able to help <span aria-label=\"slight smile\" class=\"emoji emoji-1f642\" role=\"img\" title=\"slight smile\">:slight_smile:</span></p>",
        "id": 34618,
        "sender_full_name": "Anderson Banihirwe",
        "timestamp": 1623857282
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"56\">@Ufuk Turuncoglu</span> I would strongly reccomend using numpy's <code>f2py</code> package to compile your fortran into an importable python shared object file.</p>",
        "id": 34640,
        "sender_full_name": "Austin Kootz",
        "timestamp": 1623859418
    },
    {
        "content": "<p>I'm open to scheduling a one-one tutorial on how to do that.</p>",
        "id": 34641,
        "sender_full_name": "Austin Kootz",
        "timestamp": 1623859447
    },
    {
        "content": "<p>Thanks for your help and suggestion <span class=\"user-mention\" data-user-id=\"97\">@Austin Kootz</span>. Actually, my simple project has lots of user defined data types which i know it is not supported by f2py. There is an extension of f2py, which is called as f90wrap, to support user defined Fortran data types but it seems it is not working in my case (maybe it is lack of my experience) and seems hiding all the details to make customizations. So, my limited experience directed to me a Cython. I know you need to do lots of things manually but it allow you to make customization and full control. Anyway, let me know what do you think?</p>",
        "id": 34662,
        "sender_full_name": "Ufuk Turuncoglu",
        "timestamp": 1623861670
    },
    {
        "content": "<p>Frankly we found Cython solutions unworkable.  In fact we replaced our cython based stack to f2py last year, and it took us only about 10% as long to re implement everything compared to the first cython implementation.</p>",
        "id": 34665,
        "sender_full_name": "Austin Kootz",
        "timestamp": 1623861990
    },
    {
        "content": "<p>I would strongly suggest re-working the user-defined data types into types that are supported by f2py, and then using it.</p>",
        "id": 34666,
        "sender_full_name": "Austin Kootz",
        "timestamp": 1623862029
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"97\">@Austin Kootz</span> the user defined types are not part of the code that i developed and they are coming from an external library. Also, the functions that i am trying to expose to Python also coming from that external library. So, i have no control on those parts. I am just trying to create a wrapper around it. Do you think still i could use it f2py?</p>",
        "id": 34668,
        "sender_full_name": "Ufuk Turuncoglu",
        "timestamp": 1623862751
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"97\">@Austin Kootz</span>  Maybe we could meet in your free time and i could try to explain what i am plaing to do it.</p>",
        "id": 34669,
        "sender_full_name": "Ufuk Turuncoglu",
        "timestamp": 1623862820
    },
    {
        "content": "<p>Just give me some nouns so I can look at the code for a minute. What's the external library that you are trying to expose?</p>",
        "id": 34671,
        "sender_full_name": "Austin Kootz",
        "timestamp": 1623863072
    },
    {
        "content": "<p>It is ESMF (<a href=\"https://github.com/esmf-org/esmf\" target=\"_blank\" title=\"https://github.com/esmf-org/esmf\">https://github.com/esmf-org/esmf</a>) and i am trying to write followng sample code in Python (<a href=\"https://github.com/esmf-org/nuopc-app-prototypes/tree/develop/SingleModelProto\" target=\"_blank\" title=\"https://github.com/esmf-org/nuopc-app-prototypes/tree/develop/SingleModelProto\">https://github.com/esmf-org/nuopc-app-prototypes/tree/develop/SingleModelProto</a>). At this point i am just aiming <code>driver.F90</code> file. My initial implementation is in here <a href=\"https://github.com/uturuncoglu/SingleModelProtoPy\" target=\"_blank\" title=\"https://github.com/uturuncoglu/SingleModelProtoPy\">https://github.com/uturuncoglu/SingleModelProtoPy</a> but this does not have all the code that i have. i did not push my recent development but this could give you an idea.</p>",
        "id": 34672,
        "sender_full_name": "Ufuk Turuncoglu",
        "timestamp": 1623863241
    },
    {
        "content": "<p>ESMF is already available in python's conda package manager, and has a python interface here: <a href=\"https://github.com/esmf-org/esmf/blob/develop/src/addon/ESMPy/README.md\" target=\"_blank\" title=\"https://github.com/esmf-org/esmf/blob/develop/src/addon/ESMPy/README.md\">https://github.com/esmf-org/esmf/blob/develop/src/addon/ESMPy/README.md</a></p>",
        "id": 34675,
        "sender_full_name": "Austin Kootz",
        "timestamp": 1623863616
    },
    {
        "content": "<p>Driver.py should be easy to use with f2py</p>",
        "id": 34676,
        "sender_full_name": "Austin Kootz",
        "timestamp": 1623863712
    },
    {
        "content": "<p>Are you on darwin(macos) or linux?</p>",
        "id": 34677,
        "sender_full_name": "Austin Kootz",
        "timestamp": 1623863813
    },
    {
        "content": "<p>Yes, i know and i am also workin as a part of ESMF team. the ESMPy is very limited capabilityit does not  provide what i need. It just have loose connection with ESMF for just regridding etc. and there is no way to call core ESMF functions from Python using ESMPy. For example, if you look at ESMF_Init call (<a href=\"https://github.com/esmf-org/esmf/blob/develop/src/Superstructure/ESMFMod/src/ESMF_Init.F90\" target=\"_blank\" title=\"https://github.com/esmf-org/esmf/blob/develop/src/Superstructure/ESMFMod/src/ESMF_Init.F90\">https://github.com/esmf-org/esmf/blob/develop/src/Superstructure/ESMFMod/src/ESMF_Init.F90</a>) it uses couple of user defined types that might be defined in the Python layer. Anyway, i am still learning but if you think that it could be done with f2py, then i could chnage my approach and go with f2py.</p>",
        "id": 34678,
        "sender_full_name": "Ufuk Turuncoglu",
        "timestamp": 1623863997
    },
    {
        "content": "<p>I prefer to use Linux. I had previously issue with MPI implementation under MacOS. The code also need to run in parallel. So, all those functions defined in ESMF side are collective operations that ESMPy does not support it as we need.</p>",
        "id": 34680,
        "sender_full_name": "Ufuk Turuncoglu",
        "timestamp": 1623864076
    },
    {
        "content": "<p>Linux is good, f2py works great on that platform. you'll want to make sure you have numpy &gt;=1.20.2 and gfortran_linux-64 installed from the conda-forge channel in your conda environment.</p>",
        "id": 34685,
        "sender_full_name": "Austin Kootz",
        "timestamp": 1623865083
    },
    {
        "content": "<p>I am doing my development on Cheyenne and i could install all the requiremsnts to my user with pip.</p>",
        "id": 34686,
        "sender_full_name": "Ufuk Turuncoglu",
        "timestamp": 1623865189
    },
    {
        "content": "<p>on cheyenne, you can also use conda.</p>",
        "id": 34688,
        "sender_full_name": "Austin Kootz",
        "timestamp": 1623865207
    },
    {
        "content": "<p><a href=\"https://docs.conda.io/en/latest/miniconda.html#linux-installers\" target=\"_blank\" title=\"https://docs.conda.io/en/latest/miniconda.html#linux-installers\">https://docs.conda.io/en/latest/miniconda.html#linux-installers</a></p>",
        "id": 34691,
        "sender_full_name": "Austin Kootz",
        "timestamp": 1623865277
    },
    {
        "content": "<p>sure. if you have time this week we could discuss about it. i am not sure how initial desing will look like.</p>",
        "id": 34693,
        "sender_full_name": "Ufuk Turuncoglu",
        "timestamp": 1623865289
    },
    {
        "content": "<p>And I would strongly advise using conda so as to have far more control and separation for your various python environements.</p>",
        "id": 34695,
        "sender_full_name": "Austin Kootz",
        "timestamp": 1623865319
    },
    {
        "content": "<p>3:30 MDT tomorrow works for me.</p>",
        "id": 34696,
        "sender_full_name": "Austin Kootz",
        "timestamp": 1623865354
    },
    {
        "content": "<p>okay. that is good idea. btw, i am scheduling a call for that time.</p>",
        "id": 34697,
        "sender_full_name": "Ufuk Turuncoglu",
        "timestamp": 1623865426
    },
    {
        "content": "<p>thanks for your help</p>",
        "id": 34698,
        "sender_full_name": "Ufuk Turuncoglu",
        "timestamp": 1623865437
    },
    {
        "content": "<p>I have just sent it, if you did not get invitation just let me know</p>",
        "id": 34699,
        "sender_full_name": "Ufuk Turuncoglu",
        "timestamp": 1623865538
    }
]