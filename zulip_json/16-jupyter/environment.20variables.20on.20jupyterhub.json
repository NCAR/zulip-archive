[
    {
        "content": "<p>I am using a specific version of netcdf that includes hdf5 ffilter plugins for compression on Cheyenne.  I have to set the plugin path as follows:<br>\nsetenv HDF5_PLUGIN_PATH /glade/work/haiyingx/hdf/h5pl-1.12.1-Linux/HDF_Group/HDF5/1.12.1/lib/plugin/<br>\nNow when I run a python session directly on Cheyenne, for example, as long as this path is set, then the netCDF4-python package can read my netcdf file with the filter. So yay for that.</p>\n<p>But now I would like to be able to do this on jupyterhub.  I have tried setting the plugin path like this in my notebook:<br>\nos.environ[\"HDF5_PLUGIN_PATH\"] = \"/glade/work/haiyingx/hdf/h5pl-1.12.1-Linux/HDF_Group/HDF5/1.12.1/lib/plugin/\"<br>\nbut the netCDF4 python does not seem to get this info as it can't find the filter definitions (i.e., I get the message that you get if you forget to set this filter path).  I have never messed with my environment variables in jupyterhub before, so I must be missing some concept on how this works.  Any help is appreciated!</p>",
        "id": 49676,
        "sender_full_name": "Allison Baker",
        "timestamp": 1643134181
    },
    {
        "content": "<p>You can probably do this a number of ways, but ultimately the startup for Jupyter sessions from JupyterHub is done in bash and often picks up things in either ~/.bashrc or ~/.bash_profile depending on how one has structured their dot files. Alternatively, there is an optional ~/.jupyterhub file (that must use bash format) that could be used, but will require you to restart your JupyterHub server before it takes effect:</p>\n<p><a href=\"/user_uploads/2/75/nOZ3Bg1so2rf_9LU5ugO0Pz_/image.png\">image.png</a> </p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/2/75/nOZ3Bg1so2rf_9LU5ugO0Pz_/image.png\" title=\"image.png\"><img src=\"/user_uploads/2/75/nOZ3Bg1so2rf_9LU5ugO0Pz_/image.png\"></a></div><p>Might be required depending on how you're interacting with NetCDF I suppose.</p>",
        "id": 49682,
        "sender_full_name": "Jared Baker",
        "timestamp": 1643135337
    },
    {
        "content": "<p>Thanks - I'll try this...</p>",
        "id": 49683,
        "sender_full_name": "Allison Baker",
        "timestamp": 1643136683
    },
    {
        "content": "<p>Thanks <span class=\"user-mention\" data-user-id=\"154\">@Jared Baker</span>  - both of those options work (creating a .jupyterhub file or adding to my .bashrc)</p>",
        "id": 49688,
        "sender_full_name": "Allison Baker",
        "timestamp": 1643143593
    }
]