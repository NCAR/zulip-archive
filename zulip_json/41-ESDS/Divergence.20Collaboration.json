[
    {
        "content": "<p>Hi ESDS community. I've been working on a script for vertically integration moisture flux (<a href=\"https://www.ncl.ucar.edu/Applications/wind.shtml#:~:text=plot%20is%20presented.-,mfc_div_1.ncl,-%3A%20Calculate%20various%20divergence\">NCL application -- here</a>). At one point in this script we have to calculate divergence. The NCL fx used is <a href=\"https://www.ncl.ucar.edu/Document/Functions/Built-in/uv2dvF-1.shtml\"><code>uv2dvf</code></a> that uses spherical harmonics in the divergence calculation. Has anyone here used that function before? I would love to learn more about how using spherical harmonics improves the calculation and if it is worth writing a Python method that does this. Thanks!</p>",
        "id": 77488,
        "sender_full_name": "Julia Kent",
        "timestamp": 1679604428
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"12\">@Julia Kent</span> I haven't used that function before, but we've had some previous discussion on zulip related to spherical harmonics, for example the <code>gradsf</code> function with <span class=\"user-mention\" data-user-id=\"97\">@Alea Kootz</span><br>\n<a href=\"#narrow/stream/10-python-questions/topic/spherical.20harmonics.20from.20lat-lon.20grid/near/54113\">Here's the thread</a> -- apologies if you've already seen this and it's not helpful.</p>",
        "id": 77509,
        "sender_full_name": "Katie Dagon",
        "timestamp": 1679608587
    },
    {
        "content": "<p>Thanks Katie! It looks like you were ultimately after a gradient function that used spherical harmonics? It doesn't look like our <a href=\"https://geocat-comp.readthedocs.io/en/latest/user_api/generated/geocat.comp.gradient.gradient.html\"><code>gradient</code></a> fx specifies that it uses those -- so what did you end up using? The gradient seems only one step away from making the divergence function.</p>",
        "id": 77514,
        "sender_full_name": "Julia Kent",
        "timestamp": 1679609081
    },
    {
        "content": "<p>I played around with a couple different options, <a href=\"https://ajdawson.github.io/windspharm/latest/\">the windspharm package</a>, and some non-spherical harmonics options like <code>numpy.gradient</code> and <code>metpy.calc.gradient</code>. <span class=\"user-mention\" data-user-id=\"97\">@Alea Kootz</span> also provided some code to calculate spherical harmonics in python, as I recall.</p>",
        "id": 77518,
        "sender_full_name": "Katie Dagon",
        "timestamp": 1679611248
    },
    {
        "content": "<p>How different do you expect your results when using spherical harmonics and not?</p>",
        "id": 77524,
        "sender_full_name": "Julia Kent",
        "timestamp": 1679612467
    },
    {
        "content": "<p>I don't think they were that different for my specific case, but it's been a while since I thought about this. Happy to forward emails or share notebooks if that would be helpful.</p>",
        "id": 77527,
        "sender_full_name": "Katie Dagon",
        "timestamp": 1679614423
    },
    {
        "content": "<p>Thanks Katie. That's actually a big help. I'd appreciate any notebooks or materials you could send.</p>",
        "id": 77553,
        "sender_full_name": "Julia Kent",
        "timestamp": 1679668407
    },
    {
        "content": "<p>MetPy completed a big refactor last fall to take the earth's curvature into account for these functions, with their example here <a href=\"https://unidata.github.io/MetPy/latest/examples/calculations/Divergence.html#sphx-glr-examples-calculations-divergence-py\">https://unidata.github.io/MetPy/latest/examples/calculations/Divergence.html#sphx-glr-examples-calculations-divergence-py</a> you could also check out the issue thread here <a href=\"https://github.com/Unidata/MetPy/issues/893\">https://github.com/Unidata/MetPy/issues/893</a> which details the associated PRs that pushed it back the finish line and differences between taking the curvature into account vs. ignoring it.</p>",
        "id": 77573,
        "sender_full_name": "Max Grover",
        "timestamp": 1679676261
    },
    {
        "content": "<p>I'm getting some errors using Metpy's divergence that I don't fully understand yet. Numpy's  gradient is working for me though.</p>",
        "id": 77582,
        "sender_full_name": "Julia Kent",
        "timestamp": 1679676983
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"12\">@Julia Kent</span> Feel free to open an issue/discussion. If we can get to the data, it's easy for us to take a look.</p>",
        "id": 77717,
        "sender_full_name": "Ryan May",
        "timestamp": 1679684204
    },
    {
        "content": "<p>Hi Julia, I did compare using spherical harmonics and using gradient function to calculate the divergence on spherical coordinate for ERA-Interim 6-hourly data. I am happy to share my code and some plots if you are interested. In short, the main difference for vertically integrated moisture flux is near the fronts.</p>",
        "id": 78013,
        "sender_full_name": "Ho-Hsuan Wei",
        "timestamp": 1680027781
    },
    {
        "content": "<p>I am definitely interested in that. Thanks Ho-Hsuan! Could you point me to a workflow? And potentially a sample file you've calculated vertically integrated moisture flux with? That would be a huge help thanks!</p>",
        "id": 78130,
        "sender_full_name": "Julia Kent",
        "timestamp": 1680101613
    }
]