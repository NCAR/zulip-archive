[
    {
        "content": "<p>mom6_tools has some nice plotting functionality in m6plot.py. It would be nice if those of us analyzing POP didn't have to individually reinvent the wheel to generate standard plots. How hard would it be to add a version of m6plot.py to pop_tools?</p>",
        "id": 6347,
        "sender_full_name": "Stephen Yeager",
        "timestamp": 1586448791
    },
    {
        "content": "<blockquote>\n<p>mom6_tools has some nice plotting functionality in m6plot.py. It would be nice if those of us analyzing POP didn't have to individually reinvent the wheel to generate standard plots. How hard would it be to add a version of m6plot.py to pop_tools?</p>\n</blockquote>\n<p>Adding a version of m6plot.py into pop_tools would not be hard. However, as shown below, it seems some of the plotting capabilities need to be adjusted to work properly with the gx1v7 grid. I am not sure what's happening here...<br>\n<a href=\"/user_uploads/2/hjjKzAA1L0SFy2KtuRdORvpA/pasted_image.png\" target=\"_blank\" title=\"pasted_image.png\">pasted image</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/2/hjjKzAA1L0SFy2KtuRdORvpA/pasted_image.png\" target=\"_blank\" title=\"pasted image\"><img src=\"/user_uploads/2/hjjKzAA1L0SFy2KtuRdORvpA/pasted_image.png\"></a></div>",
        "id": 6413,
        "sender_full_name": "Gustavo M Marques",
        "timestamp": 1586547775
    },
    {
        "content": "<p>This may need the <code>add_cyclic_point</code> workaround</p>",
        "id": 6416,
        "sender_full_name": "Deepak Cherian",
        "timestamp": 1586548216
    },
    {
        "content": "<p>Yes. The longitude in POP grid are not monotonic and most plotting tools don't like that.  We came up with the a workaround. Matt wrapped it in the following function.</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"k\">def</span> <span class=\"nf\">pop_add_cyclic</span><span class=\"p\">(</span><span class=\"n\">ds</span><span class=\"p\">):</span>\n\n    <span class=\"n\">nj</span> <span class=\"o\">=</span> <span class=\"n\">ds</span><span class=\"o\">.</span><span class=\"n\">TLAT</span><span class=\"o\">.</span><span class=\"n\">shape</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span>\n    <span class=\"n\">ni</span> <span class=\"o\">=</span> <span class=\"n\">ds</span><span class=\"o\">.</span><span class=\"n\">TLONG</span><span class=\"o\">.</span><span class=\"n\">shape</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">]</span>\n\n    <span class=\"n\">xL</span> <span class=\"o\">=</span> <span class=\"nb\">int</span><span class=\"p\">(</span><span class=\"n\">ni</span><span class=\"o\">/</span><span class=\"mi\">2</span> <span class=\"o\">-</span> <span class=\"mi\">1</span><span class=\"p\">)</span>\n    <span class=\"n\">xR</span> <span class=\"o\">=</span> <span class=\"nb\">int</span><span class=\"p\">(</span><span class=\"n\">xL</span> <span class=\"o\">+</span> <span class=\"n\">ni</span><span class=\"p\">)</span>\n\n    <span class=\"n\">tlon</span> <span class=\"o\">=</span> <span class=\"n\">ds</span><span class=\"o\">.</span><span class=\"n\">TLONG</span><span class=\"o\">.</span><span class=\"n\">data</span>\n    <span class=\"n\">tlat</span> <span class=\"o\">=</span> <span class=\"n\">ds</span><span class=\"o\">.</span><span class=\"n\">TLAT</span><span class=\"o\">.</span><span class=\"n\">data</span>\n\n    <span class=\"n\">tlon</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">where</span><span class=\"p\">(</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">greater_equal</span><span class=\"p\">(</span><span class=\"n\">tlon</span><span class=\"p\">,</span> <span class=\"nb\">min</span><span class=\"p\">(</span><span class=\"n\">tlon</span><span class=\"p\">[:,</span><span class=\"mi\">0</span><span class=\"p\">])),</span> <span class=\"n\">tlon</span><span class=\"o\">-</span><span class=\"mf\">360.</span><span class=\"p\">,</span> <span class=\"n\">tlon</span><span class=\"p\">)</span>\n    <span class=\"n\">lon</span>  <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">concatenate</span><span class=\"p\">((</span><span class=\"n\">tlon</span><span class=\"p\">,</span> <span class=\"n\">tlon</span> <span class=\"o\">+</span> <span class=\"mf\">360.</span><span class=\"p\">),</span> <span class=\"mi\">1</span><span class=\"p\">)</span>\n    <span class=\"n\">lon</span> <span class=\"o\">=</span> <span class=\"n\">lon</span><span class=\"p\">[:,</span> <span class=\"n\">xL</span><span class=\"p\">:</span><span class=\"n\">xR</span><span class=\"p\">]</span>\n\n    <span class=\"k\">if</span> <span class=\"n\">ni</span> <span class=\"o\">==</span> <span class=\"mi\">320</span><span class=\"p\">:</span>\n        <span class=\"n\">lon</span><span class=\"p\">[</span><span class=\"mi\">367</span><span class=\"p\">:</span><span class=\"o\">-</span><span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">lon</span><span class=\"p\">[</span><span class=\"mi\">367</span><span class=\"p\">:</span><span class=\"o\">-</span><span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">]</span> <span class=\"o\">+</span> <span class=\"mf\">360.</span>\n    <span class=\"n\">lon</span> <span class=\"o\">=</span> <span class=\"n\">lon</span> <span class=\"o\">-</span> <span class=\"mf\">360.</span>\n\n    <span class=\"n\">lon</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">hstack</span><span class=\"p\">((</span><span class=\"n\">lon</span><span class=\"p\">,</span> <span class=\"n\">lon</span><span class=\"p\">[:,</span> <span class=\"mi\">0</span><span class=\"p\">:</span><span class=\"mi\">1</span><span class=\"p\">]</span> <span class=\"o\">+</span> <span class=\"mf\">360.</span><span class=\"p\">))</span>\n    <span class=\"k\">if</span> <span class=\"n\">ni</span> <span class=\"o\">==</span> <span class=\"mi\">320</span><span class=\"p\">:</span>\n        <span class=\"n\">lon</span><span class=\"p\">[</span><span class=\"mi\">367</span><span class=\"p\">:,</span> <span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">lon</span><span class=\"p\">[</span><span class=\"mi\">367</span><span class=\"p\">:,</span> <span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">]</span> <span class=\"o\">-</span> <span class=\"mf\">360.</span>\n\n    <span class=\"c1\">#-- trick cartopy into doing the right thing:</span>\n    <span class=\"c1\">#   it gets confused when the cyclic coords are identical</span>\n    <span class=\"n\">lon</span><span class=\"p\">[:,</span> <span class=\"mi\">0</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">lon</span><span class=\"p\">[:,</span> <span class=\"mi\">0</span><span class=\"p\">]</span> <span class=\"o\">-</span> <span class=\"mf\">1e-8</span>\n\n    <span class=\"c1\">#-- periodicity</span>\n    <span class=\"n\">lat</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">concatenate</span><span class=\"p\">((</span><span class=\"n\">tlat</span><span class=\"p\">,</span> <span class=\"n\">tlat</span><span class=\"p\">),</span> <span class=\"mi\">1</span><span class=\"p\">)</span>\n    <span class=\"n\">lat</span> <span class=\"o\">=</span> <span class=\"n\">lat</span><span class=\"p\">[:,</span> <span class=\"n\">xL</span><span class=\"p\">:</span><span class=\"n\">xR</span><span class=\"p\">]</span>\n    <span class=\"n\">lat</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">hstack</span><span class=\"p\">((</span><span class=\"n\">lat</span><span class=\"p\">,</span> <span class=\"n\">lat</span><span class=\"p\">[:,</span><span class=\"mi\">0</span><span class=\"p\">:</span><span class=\"mi\">1</span><span class=\"p\">]))</span>\n\n    <span class=\"n\">TLAT</span> <span class=\"o\">=</span> <span class=\"n\">xr</span><span class=\"o\">.</span><span class=\"n\">DataArray</span><span class=\"p\">(</span><span class=\"n\">lat</span><span class=\"p\">,</span> <span class=\"n\">dims</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"s1\">&#39;nlat&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;nlon&#39;</span><span class=\"p\">))</span>\n    <span class=\"n\">TLONG</span> <span class=\"o\">=</span> <span class=\"n\">xr</span><span class=\"o\">.</span><span class=\"n\">DataArray</span><span class=\"p\">(</span><span class=\"n\">lon</span><span class=\"p\">,</span> <span class=\"n\">dims</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"s1\">&#39;nlat&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;nlon&#39;</span><span class=\"p\">))</span>\n\n    <span class=\"n\">dso</span> <span class=\"o\">=</span> <span class=\"n\">xr</span><span class=\"o\">.</span><span class=\"n\">Dataset</span><span class=\"p\">({</span><span class=\"s1\">&#39;TLAT&#39;</span><span class=\"p\">:</span> <span class=\"n\">TLAT</span><span class=\"p\">,</span> <span class=\"s1\">&#39;TLONG&#39;</span><span class=\"p\">:</span> <span class=\"n\">TLONG</span><span class=\"p\">})</span>\n\n    <span class=\"c1\"># copy vars</span>\n    <span class=\"n\">varlist</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">v</span> <span class=\"k\">for</span> <span class=\"n\">v</span> <span class=\"ow\">in</span> <span class=\"n\">ds</span><span class=\"o\">.</span><span class=\"n\">data_vars</span> <span class=\"k\">if</span> <span class=\"n\">v</span> <span class=\"ow\">not</span> <span class=\"ow\">in</span> <span class=\"p\">[</span><span class=\"s1\">&#39;TLAT&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;TLONG&#39;</span><span class=\"p\">]]</span>\n    <span class=\"k\">for</span> <span class=\"n\">v</span> <span class=\"ow\">in</span> <span class=\"n\">varlist</span><span class=\"p\">:</span>\n        <span class=\"n\">v_dims</span> <span class=\"o\">=</span> <span class=\"n\">ds</span><span class=\"p\">[</span><span class=\"n\">v</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">dims</span>\n        <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"p\">(</span><span class=\"s1\">&#39;nlat&#39;</span> <span class=\"ow\">in</span> <span class=\"n\">v_dims</span> <span class=\"ow\">and</span> <span class=\"s1\">&#39;nlon&#39;</span> <span class=\"ow\">in</span> <span class=\"n\">v_dims</span><span class=\"p\">):</span>\n            <span class=\"n\">dso</span><span class=\"p\">[</span><span class=\"n\">v</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">ds</span><span class=\"p\">[</span><span class=\"n\">v</span><span class=\"p\">]</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"c1\"># determine and sort other dimensions</span>\n            <span class=\"n\">other_dims</span> <span class=\"o\">=</span> <span class=\"nb\">set</span><span class=\"p\">(</span><span class=\"n\">v_dims</span><span class=\"p\">)</span> <span class=\"o\">-</span> <span class=\"p\">{</span><span class=\"s1\">&#39;nlat&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;nlon&#39;</span><span class=\"p\">}</span>\n            <span class=\"n\">other_dims</span> <span class=\"o\">=</span> <span class=\"nb\">tuple</span><span class=\"p\">([</span><span class=\"n\">d</span> <span class=\"k\">for</span> <span class=\"n\">d</span> <span class=\"ow\">in</span> <span class=\"n\">v_dims</span> <span class=\"k\">if</span> <span class=\"n\">d</span> <span class=\"ow\">in</span> <span class=\"n\">other_dims</span><span class=\"p\">])</span>\n            <span class=\"n\">lon_dim</span> <span class=\"o\">=</span> <span class=\"n\">ds</span><span class=\"p\">[</span><span class=\"n\">v</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">dims</span><span class=\"o\">.</span><span class=\"n\">index</span><span class=\"p\">(</span><span class=\"s1\">&#39;nlon&#39;</span><span class=\"p\">)</span>\n            <span class=\"n\">field</span> <span class=\"o\">=</span> <span class=\"n\">ds</span><span class=\"p\">[</span><span class=\"n\">v</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">data</span>\n            <span class=\"n\">field</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">concatenate</span><span class=\"p\">((</span><span class=\"n\">field</span><span class=\"p\">,</span> <span class=\"n\">field</span><span class=\"p\">),</span> <span class=\"n\">lon_dim</span><span class=\"p\">)</span>\n            <span class=\"n\">field</span> <span class=\"o\">=</span> <span class=\"n\">field</span><span class=\"p\">[</span><span class=\"o\">...</span><span class=\"p\">,</span> <span class=\"p\">:,</span> <span class=\"n\">xL</span><span class=\"p\">:</span><span class=\"n\">xR</span><span class=\"p\">]</span>\n            <span class=\"n\">field</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">concatenate</span><span class=\"p\">((</span><span class=\"n\">field</span><span class=\"p\">,</span> <span class=\"n\">field</span><span class=\"p\">[</span><span class=\"o\">...</span><span class=\"p\">,</span> <span class=\"p\">:,</span> <span class=\"mi\">0</span><span class=\"p\">:</span><span class=\"mi\">1</span><span class=\"p\">]),</span> <span class=\"n\">lon_dim</span><span class=\"p\">)</span>\n            <span class=\"n\">dso</span><span class=\"p\">[</span><span class=\"n\">v</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">xr</span><span class=\"o\">.</span><span class=\"n\">DataArray</span><span class=\"p\">(</span><span class=\"n\">field</span><span class=\"p\">,</span> <span class=\"n\">dims</span><span class=\"o\">=</span><span class=\"n\">other_dims</span><span class=\"o\">+</span><span class=\"p\">(</span><span class=\"s1\">&#39;nlat&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;nlon&#39;</span><span class=\"p\">),</span>\n                                  <span class=\"n\">attrs</span><span class=\"o\">=</span><span class=\"n\">ds</span><span class=\"p\">[</span><span class=\"n\">v</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">attrs</span><span class=\"p\">)</span>\n\n\n    <span class=\"c1\"># copy coords</span>\n    <span class=\"k\">for</span> <span class=\"n\">v</span><span class=\"p\">,</span> <span class=\"n\">da</span> <span class=\"ow\">in</span> <span class=\"n\">ds</span><span class=\"o\">.</span><span class=\"n\">coords</span><span class=\"o\">.</span><span class=\"n\">items</span><span class=\"p\">():</span>\n        <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"p\">(</span><span class=\"s1\">&#39;nlat&#39;</span> <span class=\"ow\">in</span> <span class=\"n\">da</span><span class=\"o\">.</span><span class=\"n\">dims</span> <span class=\"ow\">and</span> <span class=\"s1\">&#39;nlon&#39;</span> <span class=\"ow\">in</span> <span class=\"n\">da</span><span class=\"o\">.</span><span class=\"n\">dims</span><span class=\"p\">):</span>\n            <span class=\"n\">dso</span> <span class=\"o\">=</span> <span class=\"n\">dso</span><span class=\"o\">.</span><span class=\"n\">assign_coords</span><span class=\"p\">(</span><span class=\"o\">**</span><span class=\"p\">{</span><span class=\"n\">v</span><span class=\"p\">:</span> <span class=\"n\">da</span><span class=\"p\">})</span>\n\n\n    <span class=\"k\">return</span> <span class=\"n\">dso</span>\n</pre></div>",
        "id": 6436,
        "sender_full_name": "Fred Castruccio",
        "timestamp": 1586550362
    },
    {
        "content": "<p>That should go into pop_tools if it is not already there.</p>",
        "id": 6437,
        "sender_full_name": "Gustavo M Marques",
        "timestamp": 1586550640
    },
    {
        "content": "<p>On a related note, Ben Johnson (who will join soon), apparently has a plotting function that handles the tripole seam. cc <span class=\"user-mention\" data-user-id=\"26\">@Dan Amrhein</span></p>",
        "id": 6723,
        "sender_full_name": "Deepak Cherian",
        "timestamp": 1587067405
    }
]