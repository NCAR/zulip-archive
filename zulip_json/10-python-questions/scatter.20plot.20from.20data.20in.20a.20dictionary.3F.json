[
    {
        "content": "<p>Does anyone have experience creating a scatter plot using data in a dictionary? </p>\n<p>I've tried plotting variables from two separate dictionaries (with the same keys and number of values), and plotting two different values from within a single dictionary (each key has an x and a y value) but can't seem to figure out how to create a plot. If anyone has ideas or an example, I'd really appreciate it!</p>",
        "id": 23942,
        "sender_full_name": "Danica Lombardozzi",
        "timestamp": 1610658046
    },
    {
        "content": "<p>Hi Danica, I think I know how to do that in either case, but I do end up having to use the keys() and values() methods on the dictionary. </p>\n<p>If you have one dictionary with keys being the x-points and values being the y-points, then you could just do something like</p>\n<div class=\"codehilite\"><pre><span></span>plt.scatter(your_dict.keys(), your_dict.values())\n</pre></div>\n\n\n<p>(As long as both keys and values are numeric types.)</p>\n<p>In the case where you might have two dicts that have the same keys and different values, here's an example:</p>\n<div class=\"codehilite\"><pre><span></span>import numpy as np\nimport matplotlib.pyplot as plt\n\nkeyvals = np.array([1000, 925, 850, 700, 500, 400, 300, 250, 200, 150, 100, 70, 50, 30, 20, 10, 7, 5, 3, 2, 1])\ndict1 = {k: np.random.randn() for k in keyvals}\ndict2 = {k: np.random.randn() for k in keyvals}\n\nfig, ax = plt.subplots()\nax.scatter(dict1.values(), dict2.values())\nax.set_xlabel(&quot;DICT1&quot;)\nax.set_ylabel(&quot;DICT2&quot;)\n</pre></div>\n\n\n<p>In this case the keys are numbers, but they didn't need to be, they could well have been strings. </p>\n<p>Does this help? Maybe I didn't understand your question.</p>",
        "id": 23943,
        "sender_full_name": "Brian Medeiros",
        "timestamp": 1610659592
    },
    {
        "content": "<p>Oh, in case each key in the dictionary has values that are a sequence, you could loop through to get the ones you want like this, where each key points to a list of values, and then I plot the 6th value of the lists from each dictionary's matching key against each other.</p>\n<div class=\"codehilite\"><pre><span></span>keyvals = np.array([1000, 925, 850, 700, 500, 400, 300, 250, 200, 150, 100, 70, 50, 30, 20, 10, 7, 5, 3, 2, 1])\ndict1 = {k: np.random.randn(10) for k in keyvals}\ndict2 = {k: np.random.randn(10) for k in keyvals}\n\nspecial_index = 5\nfig, ax = plt.subplots()\nfor k in dict1.keys():\n    ax.plot(dict1[k][special_index], dict2[k][special_index], marker=&#39;o&#39;)\nax.set_xlabel(&quot;DICT1&quot;)\nax.set_ylabel(&quot;DICT2&quot;)\n</pre></div>",
        "id": 23944,
        "sender_full_name": "Brian Medeiros",
        "timestamp": 1610660014
    },
    {
        "content": "<p>Thanks so much <span class=\"user-mention\" data-user-id=\"61\">@Brian Medeiros</span> ! This was super helpful, and I was able to make the plot I wanted! <br>\n<a href=\"/user_uploads/2/71/LHAdhVewcGnWp9XM0fBbCmbf/Screen-Shot-2021-01-14-at-2.49.39-PM.png\" target=\"_blank\" title=\"Screen-Shot-2021-01-14-at-2.49.39-PM.png\">scatter.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/2/71/LHAdhVewcGnWp9XM0fBbCmbf/Screen-Shot-2021-01-14-at-2.49.39-PM.png\" target=\"_blank\" title=\"scatter.png\"><img src=\"/user_uploads/2/71/LHAdhVewcGnWp9XM0fBbCmbf/Screen-Shot-2021-01-14-at-2.49.39-PM.png\"></a></div>",
        "id": 23945,
        "sender_full_name": "Danica Lombardozzi",
        "timestamp": 1610661105
    },
    {
        "content": "<p>Is there a straightforward way to change the sequence colors in a scatter plot like this example? I've unsuccessfully tried several different methods. The below code plots the figure with default colors</p>\n<div class=\"codehilite\"><pre><span></span>fig, ax = plt.subplots()\nfor k in nbp_mean.keys():\n    ax.plot(nbp_mean[k], pct_diff[k], marker=&#39;o&#39;)\n    ax.errorbar(nbp_mean[k], pct_diff[k], xerr=nbp_std[k], linestyle=&quot;None&quot;, color=&#39;lightgray&#39;, linewidth=2)\nax.set_ylabel(&quot;Change [%]&quot;)\nax.set_xlabel(&quot;2010-2015 Mean [ppm]&quot;)\n</pre></div>\n\n\n<p>I'd like to change the colors so that I can set the observation (last data point) to black. I've  made several attempts to manually change point colors through changing code in the <code>ax.plot</code> line, with error messages each time. Examples of the changes to this line (and various attempts at coding RBG values correctly) include:</p>\n<div class=\"codehilite\"><pre><span></span>colors=[&#39;slateblue&#39;,&#39;seagreen&#39;,&#39;peru&#39;,&#39;indianred&#39;,&#39;black&#39;]\ncolors_RBG={&#39;106-90-205&#39;, &#39;46-139-87&#39;, &#39;205-133-63&#39;, &#39;205-92-92&#39;, &#39;0-0-0&#39;}\n#colors_RBG={&#39;10690205&#39;, &#39;4613987&#39;, &#39;20513363&#39;, &#39;2059292&#39;, &#39;000&#39;}\n#colors_RBG=[(106,90,205),(46,139,87),(205,133,63), (205,92,92), (0,0,0)]\n\nax.plot(nbp_mean[k], pct_diff[k], marker=&#39;o&#39;, color=colors)\nax.plot(nbp_mean[k], pct_diff[k], marker=&#39;o&#39;, color=colors[k])\nax.plot(nbp_mean[k], pct_diff[k], marker=&#39;o&#39;, color=colors_RBG)\nax.plot(nbp_mean[k], pct_diff[k], marker=&#39;o&#39;, color=colors_RBG[k])\n</pre></div>\n\n\n<p>I can change so that all points have the same color (color='black'), but I want each point to be a different color. Each of the above lines results in an error (<code>RGBA sequence should have length 3 or 4</code>; <code>list indices must be integers or slices, not str</code>; <code>'set' object is not subscriptable</code>).</p>\n<p>How can I change the sequence of colors so that I can specify the color for each point?</p>",
        "id": 31067,
        "sender_full_name": "Danica Lombardozzi",
        "timestamp": 1620664886
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"74\">@Danica Lombardozzi</span> , I take it that <code>nbp_mean[k]</code> is a vector?</p>\n<p>Does this help?</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"c1\"># generate pseudo data</span>\n<span class=\"n\">x</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">arange</span><span class=\"p\">(</span><span class=\"mi\">10</span><span class=\"p\">)</span>\n<span class=\"n\">y</span> <span class=\"o\">=</span> <span class=\"n\">x</span><span class=\"o\">**</span><span class=\"mi\">2</span>\n\n<span class=\"c1\"># get default color sequence</span>\n<span class=\"n\">colors</span> <span class=\"o\">=</span> <span class=\"n\">plt</span><span class=\"o\">.</span><span class=\"n\">rcParams</span><span class=\"p\">[</span><span class=\"s1\">&#39;axes.prop_cycle&#39;</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">by_key</span><span class=\"p\">()[</span><span class=\"s1\">&#39;color&#39;</span><span class=\"p\">]</span>\n\n<span class=\"c1\"># loop over data and plot each point</span>\n<span class=\"k\">for</span> <span class=\"n\">xi</span><span class=\"p\">,</span> <span class=\"n\">yi</span><span class=\"p\">,</span> <span class=\"n\">color</span> <span class=\"ow\">in</span> <span class=\"nb\">zip</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">,</span> <span class=\"n\">y</span><span class=\"p\">,</span> <span class=\"n\">colors</span><span class=\"p\">):</span>\n    <span class=\"n\">plt</span><span class=\"o\">.</span><span class=\"n\">plot</span><span class=\"p\">(</span><span class=\"n\">xi</span><span class=\"p\">,</span> <span class=\"n\">yi</span><span class=\"p\">,</span> <span class=\"s1\">&#39;.&#39;</span><span class=\"p\">,</span> <span class=\"n\">color</span><span class=\"o\">=</span><span class=\"n\">color</span><span class=\"p\">)</span>\n</pre></div>",
        "id": 31074,
        "sender_full_name": "Matt Long",
        "timestamp": 1620665856
    },
    {
        "content": "<p>Thanks <span class=\"user-mention\" data-user-id=\"14\">@Matt Long</span> . <code>npb_mean</code> and <code>pct_diff</code> are dictionaries. In the example you share, I don't quite understand how to include the colors in the <code>for</code> loop while looping over the dictionary.</p>",
        "id": 31089,
        "sender_full_name": "Danica Lombardozzi",
        "timestamp": 1620667997
    },
    {
        "content": "<p>is this what you are looking for?</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"n\">x</span><span class=\"p\">,</span> <span class=\"n\">y</span> <span class=\"o\">=</span> <span class=\"n\">nbp_mean</span><span class=\"p\">[</span><span class=\"n\">k</span><span class=\"p\">],</span> <span class=\"n\">pct_diff</span><span class=\"p\">[</span><span class=\"n\">k</span><span class=\"p\">]</span>\n<span class=\"k\">for</span> <span class=\"n\">xi</span><span class=\"p\">,</span> <span class=\"n\">yi</span><span class=\"p\">,</span> <span class=\"n\">color</span> <span class=\"ow\">in</span> <span class=\"nb\">zip</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">,</span> <span class=\"n\">y</span><span class=\"p\">,</span> <span class=\"n\">colors</span><span class=\"p\">):</span>\n    <span class=\"n\">plt</span><span class=\"o\">.</span><span class=\"n\">plot</span><span class=\"p\">(</span><span class=\"n\">xi</span><span class=\"p\">,</span> <span class=\"n\">yi</span><span class=\"p\">,</span> <span class=\"s1\">&#39;.&#39;</span><span class=\"p\">,</span> <span class=\"n\">color</span><span class=\"o\">=</span><span class=\"n\">color</span><span class=\"p\">)</span>\n</pre></div>",
        "id": 31090,
        "sender_full_name": "Matt Long",
        "timestamp": 1620668076
    },
    {
        "content": "<p>I think the confusion is arising because <code>colors</code> is not a dictionary, but it probably should be.... It's at least being treated like a dictionary <code>ax.plot(nbp_mean[k], pct_diff[k], marker='o', color=colors[k])</code></p>\n<p>Also <code>colors_RGB</code> is a set which looks like a typo <code>{}</code> instead of <code>[]</code>.</p>",
        "id": 31091,
        "sender_full_name": "Deepak Cherian",
        "timestamp": 1620668190
    },
    {
        "content": "<p>Thanks! Changing <code>colors</code> to a dictionary did the trick!</p>",
        "id": 31094,
        "sender_full_name": "Danica Lombardozzi",
        "timestamp": 1620669106
    }
]