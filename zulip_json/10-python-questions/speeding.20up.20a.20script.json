[
    {
        "content": "<p>Hi </p>\n<p>I have the following script</p>\n<p>/glade/u/home/lamar/Python/CMIP6_analysis/PM2.5/health_ssp.py that goes through a (very) long list of files (from CMIP6) and computes health impacts from PM2.5.  I don't want to change the main functions GEMM and MORBIDITY,  so the only speed up I can think of would be to parallelize on the files themselves.  Thoughts?</p>",
        "id": 45744,
        "sender_full_name": "Jean-Francois Lamarque",
        "timestamp": 1635290042
    },
    {
        "content": "<p>Seems like a good candidate for dask. Eliminate the for loop, perhaps write a wrapper function that reads &amp; processes files, then have each dask worker call the function. I'm not sure how to implement this, but am interested in the solution to this problem.</p>",
        "id": 45764,
        "sender_full_name": "Stephen Yeager",
        "timestamp": 1635353007
    },
    {
        "content": "<p>A simple implementation could look something like this:</p>\n<div class=\"codehilite\" data-code-language=\"Python\"><pre><span></span><code><span class=\"k\">def</span> <span class=\"nf\">process_one_file</span><span class=\"p\">(</span><span class=\"n\">file_in</span><span class=\"p\">):</span>\n   <span class=\"c1\"># do the analysis here</span>\n\n<span class=\"n\">delayed_objs</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n<span class=\"k\">for</span> <span class=\"n\">f</span> <span class=\"ow\">in</span> <span class=\"n\">file_list</span><span class=\"p\">:</span>\n   <span class=\"n\">delayed_objs</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span>\n       <span class=\"n\">dask</span><span class=\"o\">.</span><span class=\"n\">delayed</span><span class=\"p\">(</span><span class=\"n\">process_one_file</span><span class=\"p\">)(</span><span class=\"n\">f</span><span class=\"p\">)</span>\n  <span class=\"p\">)</span>\n\n<span class=\"n\">results</span> <span class=\"o\">=</span> <span class=\"n\">dask</span><span class=\"o\">.</span><span class=\"n\">compute</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">delayed_objs</span><span class=\"p\">)</span>\n</code></pre></div>\n<p>You can also use a decorator:</p>\n<div class=\"codehilite\" data-code-language=\"Python\"><pre><span></span><code><span class=\"nd\">@dask</span><span class=\"o\">.</span><span class=\"n\">delayed</span>\n<span class=\"k\">def</span> <span class=\"nf\">process_one_file</span><span class=\"p\">(</span><span class=\"n\">file_in</span><span class=\"p\">):</span>\n   <span class=\"c1\"># do the analysis here</span>\n\n<span class=\"n\">delayed_objs</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n<span class=\"k\">for</span> <span class=\"n\">f</span> <span class=\"ow\">in</span> <span class=\"n\">file_list</span><span class=\"p\">:</span>\n   <span class=\"n\">delayed_objs</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">process_one_file</span><span class=\"p\">(</span><span class=\"n\">f</span><span class=\"p\">))</span>\n\n\n<span class=\"n\">results</span> <span class=\"o\">=</span> <span class=\"n\">dask</span><span class=\"o\">.</span><span class=\"n\">compute</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">delayed_objs</span><span class=\"p\">)</span>\n</code></pre></div>\n<p>A common pitfall, see here:<br>\n<a href=\"https://docs.dask.org/en/latest/delayed-best-practices.html#avoid-too-many-tasks\">https://docs.dask.org/en/latest/delayed-best-practices.html#avoid-too-many-tasks</a></p>",
        "id": 45776,
        "sender_full_name": "Matt Long",
        "timestamp": 1635356525
    },
    {
        "content": "<p>This is great.  Do I need to specify multiple MPI tasks when requesting a cluster?</p>\n<p>Update: I tried by setting up the number of CPUs to 8 and MPI tasks to 8.  It seems to work.</p>",
        "id": 46065,
        "sender_full_name": "Jean-Francois Lamarque",
        "timestamp": 1635793964
    },
    {
        "content": "<p>You may want to configure a dask cluster; you can use <code>ncar_jobqueue</code> to do this:<br>\n<a href=\"https://github.com/NCAR/ncar-jobqueue\">https://github.com/NCAR/ncar-jobqueue</a></p>",
        "id": 46066,
        "sender_full_name": "Matt Long",
        "timestamp": 1635796326
    }
]