[
    {
        "content": "<p>Is anyone aware of an issue arising recently with <code>xarray</code> datetime indexing? </p>\n<p>I am having trouble indexing a time coordinate with <code>calendar='noleap'</code>.</p>\n<p>I can generate a DataArray with <code>calendar='noleap'</code> as follows:</p>\n<div class=\"codehilite\" data-code-language=\"Python\"><pre><span></span><code><span class=\"n\">time</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n<span class=\"k\">for</span> <span class=\"n\">year</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"mi\">2005</span><span class=\"p\">,</span> <span class=\"mi\">2015</span><span class=\"p\">):</span>\n    <span class=\"k\">for</span> <span class=\"n\">month</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">13</span><span class=\"p\">):</span>\n        <span class=\"n\">time</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span>\n            <span class=\"n\">cftime</span><span class=\"o\">.</span><span class=\"n\">datetime</span><span class=\"p\">(</span><span class=\"n\">year</span><span class=\"p\">,</span> <span class=\"n\">month</span><span class=\"p\">,</span> <span class=\"mi\">15</span><span class=\"p\">,</span> <span class=\"n\">calendar</span><span class=\"o\">=</span><span class=\"s2\">\"noleap\"</span><span class=\"p\">)</span>\n        <span class=\"p\">)</span>\n<span class=\"n\">da</span> <span class=\"o\">=</span> <span class=\"n\">xr</span><span class=\"o\">.</span><span class=\"n\">DataArray</span><span class=\"p\">(</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">arange</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">time</span><span class=\"p\">)),</span> <span class=\"n\">dims</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"s2\">\"time\"</span><span class=\"p\">),</span>\n                  <span class=\"n\">coords</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"s2\">\"time\"</span><span class=\"p\">:</span> <span class=\"n\">xr</span><span class=\"o\">.</span><span class=\"n\">DataArray</span><span class=\"p\">(</span><span class=\"n\">time</span><span class=\"p\">,</span> <span class=\"n\">dims</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"s2\">\"time\"</span><span class=\"p\">))})</span>\n</code></pre></div>\n<p>This indexing operation:</p>\n<div class=\"codehilite\" data-code-language=\"Python\"><pre><span></span><code><span class=\"n\">da</span><span class=\"o\">.</span><span class=\"n\">sel</span><span class=\"p\">(</span><span class=\"n\">time</span><span class=\"o\">=</span><span class=\"nb\">slice</span><span class=\"p\">(</span><span class=\"s2\">\"2005\"</span><span class=\"p\">,</span> <span class=\"s2\">\"2006\"</span><span class=\"p\">))</span>\n</code></pre></div>\n<p>Used to work! But with a recent <code>xarray</code> update I get the following error:</p>\n<div class=\"codehilite\" data-code-language=\"Python\"><pre><span></span><code><span class=\"ne\">TypeError</span><span class=\"p\">:</span> <span class=\"n\">cannot</span> <span class=\"n\">compare</span> <span class=\"n\">cftime</span><span class=\"o\">.</span><span class=\"n\">datetime</span><span class=\"p\">(</span><span class=\"mi\">2010</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">15</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"n\">calendar</span><span class=\"o\">=</span><span class=\"s1\">'noleap'</span><span class=\"p\">,</span> <span class=\"n\">has_year_zero</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span> <span class=\"ow\">and</span>\n<span class=\"n\">cftime</span><span class=\"o\">.</span><span class=\"n\">datetime</span><span class=\"p\">(</span><span class=\"mi\">2005</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"n\">calendar</span><span class=\"o\">=</span><span class=\"s1\">'gregorian'</span><span class=\"p\">,</span> <span class=\"n\">has_year_zero</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">)</span>\n</code></pre></div>\n<p>But the following <em>does</em> work</p>\n<div class=\"codehilite\" data-code-language=\"Python\"><pre><span></span><code><span class=\"n\">time_slice</span> <span class=\"o\">=</span> <span class=\"nb\">slice</span><span class=\"p\">(</span>\n    <span class=\"n\">cftime</span><span class=\"o\">.</span><span class=\"n\">datetime</span><span class=\"p\">(</span><span class=\"mi\">2005</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"n\">calendar</span><span class=\"o\">=</span><span class=\"s2\">\"noleap\"</span><span class=\"p\">),</span> <span class=\"n\">cftime</span><span class=\"o\">.</span><span class=\"n\">datetime</span><span class=\"p\">(</span><span class=\"mi\">2014</span><span class=\"p\">,</span> <span class=\"mi\">12</span><span class=\"p\">,</span> <span class=\"mi\">31</span><span class=\"p\">,</span> <span class=\"n\">calendar</span><span class=\"o\">=</span><span class=\"s2\">\"noleap\"</span><span class=\"p\">)</span>\n<span class=\"p\">)</span>\n<span class=\"n\">da</span><span class=\"o\">.</span><span class=\"n\">sel</span><span class=\"p\">(</span><span class=\"n\">time</span><span class=\"o\">=</span><span class=\"n\">time_slice</span><span class=\"p\">)</span>\n</code></pre></div>",
        "id": 44187,
        "sender_full_name": "Matt Long",
        "timestamp": 1633119078
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"14\">@Matt Long</span>, something strange is going on during the <code>DataArray</code> instantiation and I haven't figured out what it is... However, the following seems to be working fine: </p>\n<div class=\"codehilite\" data-code-language=\"Python\"><pre><span></span><code><span class=\"n\">In</span> <span class=\"p\">[</span><span class=\"mi\">15</span><span class=\"p\">]:</span> <span class=\"n\">times</span> <span class=\"o\">=</span> <span class=\"n\">xr</span><span class=\"o\">.</span><span class=\"n\">cftime_range</span><span class=\"p\">(</span><span class=\"s1\">'2005'</span><span class=\"p\">,</span> <span class=\"s1\">'2015'</span><span class=\"p\">,</span> <span class=\"n\">freq</span><span class=\"o\">=</span><span class=\"s1\">'MS'</span><span class=\"p\">,</span> <span class=\"n\">calendar</span><span class=\"o\">=</span><span class=\"s1\">'noleap'</span><span class=\"p\">)</span>\n\n<span class=\"n\">In</span> <span class=\"p\">[</span><span class=\"mi\">16</span><span class=\"p\">]:</span> <span class=\"n\">da</span> <span class=\"o\">=</span> <span class=\"n\">xr</span><span class=\"o\">.</span><span class=\"n\">DataArray</span><span class=\"p\">(</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">arange</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">times</span><span class=\"p\">)),</span> <span class=\"n\">dims</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"s2\">\"time\"</span><span class=\"p\">),</span>\n    <span class=\"o\">...</span><span class=\"p\">:</span>                   <span class=\"n\">coords</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"s2\">\"time\"</span><span class=\"p\">:</span> <span class=\"n\">xr</span><span class=\"o\">.</span><span class=\"n\">DataArray</span><span class=\"p\">(</span><span class=\"n\">times</span><span class=\"p\">,</span> <span class=\"n\">dims</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"s2\">\"time\"</span><span class=\"p\">))})</span>\n\n<span class=\"n\">In</span> <span class=\"p\">[</span><span class=\"mi\">17</span><span class=\"p\">]:</span> <span class=\"n\">da</span>\n<span class=\"n\">Out</span><span class=\"p\">[</span><span class=\"mi\">17</span><span class=\"p\">]:</span>\n<span class=\"o\">&lt;</span><span class=\"n\">xarray</span><span class=\"o\">.</span><span class=\"n\">DataArray</span> <span class=\"p\">(</span><span class=\"n\">time</span><span class=\"p\">:</span> <span class=\"mi\">121</span><span class=\"p\">)</span><span class=\"o\">&gt;</span>\n<span class=\"n\">array</span><span class=\"p\">([</span>  <span class=\"mi\">0</span><span class=\"p\">,</span>   <span class=\"mi\">1</span><span class=\"p\">,</span>   <span class=\"mi\">2</span><span class=\"p\">,</span>   <span class=\"mi\">3</span><span class=\"p\">,</span>   <span class=\"mi\">4</span><span class=\"p\">,</span>   <span class=\"mi\">5</span><span class=\"p\">,</span>   <span class=\"mi\">6</span><span class=\"p\">,</span>   <span class=\"mi\">7</span><span class=\"p\">,</span>   <span class=\"mi\">8</span><span class=\"p\">,</span>   <span class=\"mi\">9</span><span class=\"p\">,</span>  <span class=\"mi\">10</span><span class=\"p\">,</span>  <span class=\"mi\">11</span><span class=\"p\">,</span>  <span class=\"mi\">12</span><span class=\"p\">,</span>\n        <span class=\"mi\">13</span><span class=\"p\">,</span>  <span class=\"mi\">14</span><span class=\"p\">,</span>  <span class=\"mi\">15</span><span class=\"p\">,</span>  <span class=\"mi\">16</span><span class=\"p\">,</span>  <span class=\"mi\">17</span><span class=\"p\">,</span>  <span class=\"mi\">18</span><span class=\"p\">,</span>  <span class=\"mi\">19</span><span class=\"p\">,</span>  <span class=\"mi\">20</span><span class=\"p\">,</span>  <span class=\"mi\">21</span><span class=\"p\">,</span>  <span class=\"mi\">22</span><span class=\"p\">,</span>  <span class=\"mi\">23</span><span class=\"p\">,</span>  <span class=\"mi\">24</span><span class=\"p\">,</span>  <span class=\"mi\">25</span><span class=\"p\">,</span>\n        <span class=\"mi\">26</span><span class=\"p\">,</span>  <span class=\"mi\">27</span><span class=\"p\">,</span>  <span class=\"mi\">28</span><span class=\"p\">,</span>  <span class=\"mi\">29</span><span class=\"p\">,</span>  <span class=\"mi\">30</span><span class=\"p\">,</span>  <span class=\"mi\">31</span><span class=\"p\">,</span>  <span class=\"mi\">32</span><span class=\"p\">,</span>  <span class=\"mi\">33</span><span class=\"p\">,</span>  <span class=\"mi\">34</span><span class=\"p\">,</span>  <span class=\"mi\">35</span><span class=\"p\">,</span>  <span class=\"mi\">36</span><span class=\"p\">,</span>  <span class=\"mi\">37</span><span class=\"p\">,</span>  <span class=\"mi\">38</span><span class=\"p\">,</span>\n        <span class=\"mi\">39</span><span class=\"p\">,</span>  <span class=\"mi\">40</span><span class=\"p\">,</span>  <span class=\"mi\">41</span><span class=\"p\">,</span>  <span class=\"mi\">42</span><span class=\"p\">,</span>  <span class=\"mi\">43</span><span class=\"p\">,</span>  <span class=\"mi\">44</span><span class=\"p\">,</span>  <span class=\"mi\">45</span><span class=\"p\">,</span>  <span class=\"mi\">46</span><span class=\"p\">,</span>  <span class=\"mi\">47</span><span class=\"p\">,</span>  <span class=\"mi\">48</span><span class=\"p\">,</span>  <span class=\"mi\">49</span><span class=\"p\">,</span>  <span class=\"mi\">50</span><span class=\"p\">,</span>  <span class=\"mi\">51</span><span class=\"p\">,</span>\n        <span class=\"mi\">52</span><span class=\"p\">,</span>  <span class=\"mi\">53</span><span class=\"p\">,</span>  <span class=\"mi\">54</span><span class=\"p\">,</span>  <span class=\"mi\">55</span><span class=\"p\">,</span>  <span class=\"mi\">56</span><span class=\"p\">,</span>  <span class=\"mi\">57</span><span class=\"p\">,</span>  <span class=\"mi\">58</span><span class=\"p\">,</span>  <span class=\"mi\">59</span><span class=\"p\">,</span>  <span class=\"mi\">60</span><span class=\"p\">,</span>  <span class=\"mi\">61</span><span class=\"p\">,</span>  <span class=\"mi\">62</span><span class=\"p\">,</span>  <span class=\"mi\">63</span><span class=\"p\">,</span>  <span class=\"mi\">64</span><span class=\"p\">,</span>\n        <span class=\"mi\">65</span><span class=\"p\">,</span>  <span class=\"mi\">66</span><span class=\"p\">,</span>  <span class=\"mi\">67</span><span class=\"p\">,</span>  <span class=\"mi\">68</span><span class=\"p\">,</span>  <span class=\"mi\">69</span><span class=\"p\">,</span>  <span class=\"mi\">70</span><span class=\"p\">,</span>  <span class=\"mi\">71</span><span class=\"p\">,</span>  <span class=\"mi\">72</span><span class=\"p\">,</span>  <span class=\"mi\">73</span><span class=\"p\">,</span>  <span class=\"mi\">74</span><span class=\"p\">,</span>  <span class=\"mi\">75</span><span class=\"p\">,</span>  <span class=\"mi\">76</span><span class=\"p\">,</span>  <span class=\"mi\">77</span><span class=\"p\">,</span>\n        <span class=\"mi\">78</span><span class=\"p\">,</span>  <span class=\"mi\">79</span><span class=\"p\">,</span>  <span class=\"mi\">80</span><span class=\"p\">,</span>  <span class=\"mi\">81</span><span class=\"p\">,</span>  <span class=\"mi\">82</span><span class=\"p\">,</span>  <span class=\"mi\">83</span><span class=\"p\">,</span>  <span class=\"mi\">84</span><span class=\"p\">,</span>  <span class=\"mi\">85</span><span class=\"p\">,</span>  <span class=\"mi\">86</span><span class=\"p\">,</span>  <span class=\"mi\">87</span><span class=\"p\">,</span>  <span class=\"mi\">88</span><span class=\"p\">,</span>  <span class=\"mi\">89</span><span class=\"p\">,</span>  <span class=\"mi\">90</span><span class=\"p\">,</span>\n        <span class=\"mi\">91</span><span class=\"p\">,</span>  <span class=\"mi\">92</span><span class=\"p\">,</span>  <span class=\"mi\">93</span><span class=\"p\">,</span>  <span class=\"mi\">94</span><span class=\"p\">,</span>  <span class=\"mi\">95</span><span class=\"p\">,</span>  <span class=\"mi\">96</span><span class=\"p\">,</span>  <span class=\"mi\">97</span><span class=\"p\">,</span>  <span class=\"mi\">98</span><span class=\"p\">,</span>  <span class=\"mi\">99</span><span class=\"p\">,</span> <span class=\"mi\">100</span><span class=\"p\">,</span> <span class=\"mi\">101</span><span class=\"p\">,</span> <span class=\"mi\">102</span><span class=\"p\">,</span> <span class=\"mi\">103</span><span class=\"p\">,</span>\n       <span class=\"mi\">104</span><span class=\"p\">,</span> <span class=\"mi\">105</span><span class=\"p\">,</span> <span class=\"mi\">106</span><span class=\"p\">,</span> <span class=\"mi\">107</span><span class=\"p\">,</span> <span class=\"mi\">108</span><span class=\"p\">,</span> <span class=\"mi\">109</span><span class=\"p\">,</span> <span class=\"mi\">110</span><span class=\"p\">,</span> <span class=\"mi\">111</span><span class=\"p\">,</span> <span class=\"mi\">112</span><span class=\"p\">,</span> <span class=\"mi\">113</span><span class=\"p\">,</span> <span class=\"mi\">114</span><span class=\"p\">,</span> <span class=\"mi\">115</span><span class=\"p\">,</span> <span class=\"mi\">116</span><span class=\"p\">,</span>\n       <span class=\"mi\">117</span><span class=\"p\">,</span> <span class=\"mi\">118</span><span class=\"p\">,</span> <span class=\"mi\">119</span><span class=\"p\">,</span> <span class=\"mi\">120</span><span class=\"p\">])</span>\n<span class=\"n\">Coordinates</span><span class=\"p\">:</span>\n  <span class=\"o\">*</span> <span class=\"n\">time</span>     <span class=\"p\">(</span><span class=\"n\">time</span><span class=\"p\">)</span> <span class=\"nb\">object</span> <span class=\"mi\">2005</span><span class=\"o\">-</span><span class=\"mi\">01</span><span class=\"o\">-</span><span class=\"mi\">01</span> <span class=\"mi\">00</span><span class=\"p\">:</span><span class=\"mi\">00</span><span class=\"p\">:</span><span class=\"mi\">00</span> <span class=\"o\">...</span> <span class=\"mi\">2015</span><span class=\"o\">-</span><span class=\"mi\">01</span><span class=\"o\">-</span><span class=\"mi\">01</span> <span class=\"mi\">00</span><span class=\"p\">:</span><span class=\"mi\">00</span><span class=\"p\">:</span><span class=\"mi\">00</span>\n</code></pre></div>\n<div class=\"codehilite\" data-code-language=\"Python\"><pre><span></span><code><span class=\"n\">In</span> <span class=\"p\">[</span><span class=\"mi\">18</span><span class=\"p\">]:</span> <span class=\"n\">da</span><span class=\"o\">.</span><span class=\"n\">sel</span><span class=\"p\">(</span><span class=\"n\">time</span><span class=\"o\">=</span><span class=\"nb\">slice</span><span class=\"p\">(</span><span class=\"s2\">\"2005\"</span><span class=\"p\">,</span> <span class=\"s2\">\"2006\"</span><span class=\"p\">))</span>\n<span class=\"n\">Out</span><span class=\"p\">[</span><span class=\"mi\">18</span><span class=\"p\">]:</span>\n<span class=\"o\">&lt;</span><span class=\"n\">xarray</span><span class=\"o\">.</span><span class=\"n\">DataArray</span> <span class=\"p\">(</span><span class=\"n\">time</span><span class=\"p\">:</span> <span class=\"mi\">24</span><span class=\"p\">)</span><span class=\"o\">&gt;</span>\n<span class=\"n\">array</span><span class=\"p\">([</span> <span class=\"mi\">0</span><span class=\"p\">,</span>  <span class=\"mi\">1</span><span class=\"p\">,</span>  <span class=\"mi\">2</span><span class=\"p\">,</span>  <span class=\"mi\">3</span><span class=\"p\">,</span>  <span class=\"mi\">4</span><span class=\"p\">,</span>  <span class=\"mi\">5</span><span class=\"p\">,</span>  <span class=\"mi\">6</span><span class=\"p\">,</span>  <span class=\"mi\">7</span><span class=\"p\">,</span>  <span class=\"mi\">8</span><span class=\"p\">,</span>  <span class=\"mi\">9</span><span class=\"p\">,</span> <span class=\"mi\">10</span><span class=\"p\">,</span> <span class=\"mi\">11</span><span class=\"p\">,</span> <span class=\"mi\">12</span><span class=\"p\">,</span> <span class=\"mi\">13</span><span class=\"p\">,</span> <span class=\"mi\">14</span><span class=\"p\">,</span> <span class=\"mi\">15</span><span class=\"p\">,</span> <span class=\"mi\">16</span><span class=\"p\">,</span>\n       <span class=\"mi\">17</span><span class=\"p\">,</span> <span class=\"mi\">18</span><span class=\"p\">,</span> <span class=\"mi\">19</span><span class=\"p\">,</span> <span class=\"mi\">20</span><span class=\"p\">,</span> <span class=\"mi\">21</span><span class=\"p\">,</span> <span class=\"mi\">22</span><span class=\"p\">,</span> <span class=\"mi\">23</span><span class=\"p\">])</span>\n<span class=\"n\">Coordinates</span><span class=\"p\">:</span>\n  <span class=\"o\">*</span> <span class=\"n\">time</span>     <span class=\"p\">(</span><span class=\"n\">time</span><span class=\"p\">)</span> <span class=\"nb\">object</span> <span class=\"mi\">2005</span><span class=\"o\">-</span><span class=\"mi\">01</span><span class=\"o\">-</span><span class=\"mi\">01</span> <span class=\"mi\">00</span><span class=\"p\">:</span><span class=\"mi\">00</span><span class=\"p\">:</span><span class=\"mi\">00</span> <span class=\"o\">...</span> <span class=\"mi\">2006</span><span class=\"o\">-</span><span class=\"mi\">12</span><span class=\"o\">-</span><span class=\"mi\">01</span> <span class=\"mi\">00</span><span class=\"p\">:</span><span class=\"mi\">00</span><span class=\"p\">:</span><span class=\"mi\">00</span>\n</code></pre></div>",
        "id": 44220,
        "sender_full_name": "Anderson Banihirwe",
        "timestamp": 1633358364
    },
    {
        "content": "<p>Thanks <span class=\"user-mention\" data-user-id=\"13\">@Anderson Banihirwe</span>, I also noticed that if I used <code>cftime_range</code> I was not able to replicate the problem.  This issue is arising during processing of CMIP6 data and the minimal example demonstrates the problem. I am not sure why a <code>cftime_range</code> generated time axis works...but that seems to be a good clue.  I poked around the <code>xarray</code> code a bit...but it's not clear to me where the problem is occurring. It's like the code <em>used</em> to effectively create <code>slice.start</code> and <code>slice.stop</code> values consistent with the attributes of the <code>time</code> axis. I have a temporary workaround in my project where I do this manually.</p>",
        "id": 44223,
        "sender_full_name": "Matt Long",
        "timestamp": 1633360714
    },
    {
        "content": "<p>can you t ry updating <code>cftime</code>. There was some churn recently that broke some tests.</p>",
        "id": 44279,
        "sender_full_name": "Deepak Cherian",
        "timestamp": 1633424219
    },
    {
        "content": "<p>I updated to cftime=1.5.1 (latest release) and the problem still occurs.</p>",
        "id": 44280,
        "sender_full_name": "Matt Long",
        "timestamp": 1633435267
    },
    {
        "content": "<p>this is a bug then. Can you file an xarray issue please?</p>",
        "id": 44656,
        "sender_full_name": "Deepak Cherian",
        "timestamp": 1633668436
    }
]