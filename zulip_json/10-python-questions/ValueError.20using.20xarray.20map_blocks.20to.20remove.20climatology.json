[
    {
        "content": "<p>Hi all, <br>\nI'm trying to calculate anomalies from a daily climatology using xarray's <code>groupby</code>, but without rechunking, which is apparently something xarray struggles with. A workaround suggested by Ryan Abernathey here <a href=\"https://nbviewer.jupyter.org/gist/rabernat/30e7b747f0e3583b5b776e4093266114\">https://nbviewer.jupyter.org/gist/rabernat/30e7b747f0e3583b5b776e4093266114</a> uses <code>map_blocks</code> to feed the DataArray to a function which calculates the climatology. My own (near-identical) implementation of this fails, as (I think) within the function a new DataArray is created by <code>groupby</code> with an additional dimension that is not in the input DA. I've created a short example just using random data:</p>\n<div class=\"codehilite\" data-code-language=\"Python\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"nn\">numpy</span> <span class=\"k\">as</span> <span class=\"nn\">np</span>\n<span class=\"kn\">import</span> <span class=\"nn\">xarray</span> <span class=\"k\">as</span> <span class=\"nn\">xr</span>\n<span class=\"kn\">import</span> <span class=\"nn\">datetime</span> <span class=\"k\">as</span> <span class=\"nn\">dt</span>\n<span class=\"kn\">import</span> <span class=\"nn\">dask.array</span> <span class=\"k\">as</span> <span class=\"nn\">da</span>\n\n<span class=\"n\">times</span><span class=\"o\">=</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">arange</span><span class=\"p\">(</span><span class=\"n\">dt</span><span class=\"o\">.</span><span class=\"n\">datetime</span><span class=\"p\">(</span><span class=\"mi\">1992</span><span class=\"p\">,</span><span class=\"mi\">2</span><span class=\"p\">,</span><span class=\"mi\">11</span><span class=\"p\">,</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">0</span><span class=\"p\">),</span><span class=\"n\">dt</span><span class=\"o\">.</span><span class=\"n\">datetime</span><span class=\"p\">(</span><span class=\"mi\">2021</span><span class=\"p\">,</span><span class=\"mi\">2</span><span class=\"p\">,</span><span class=\"mi\">11</span><span class=\"p\">,</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">0</span><span class=\"p\">),</span><span class=\"n\">dt</span><span class=\"o\">.</span><span class=\"n\">timedelta</span><span class=\"p\">(</span><span class=\"n\">days</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">))</span>\n<span class=\"n\">lats</span><span class=\"o\">=</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">arange</span><span class=\"p\">(</span><span class=\"o\">-</span><span class=\"mi\">90</span><span class=\"p\">,</span><span class=\"mi\">90</span><span class=\"p\">,</span><span class=\"mf\">1.875</span><span class=\"p\">)</span>\n<span class=\"n\">lons</span><span class=\"o\">=</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">arange</span><span class=\"p\">(</span><span class=\"o\">-</span><span class=\"mi\">180</span><span class=\"p\">,</span><span class=\"mi\">180</span><span class=\"p\">,</span><span class=\"mf\">3.75</span><span class=\"p\">)</span>\n\n<span class=\"n\">X</span><span class=\"o\">=</span><span class=\"n\">xr</span><span class=\"o\">.</span><span class=\"n\">DataArray</span><span class=\"p\">(</span>\\\n               <span class=\"n\">da</span><span class=\"o\">.</span><span class=\"n\">random</span><span class=\"o\">.</span><span class=\"n\">normal</span><span class=\"p\">(</span><span class=\"mi\">5</span><span class=\"p\">,</span><span class=\"mi\">1</span><span class=\"p\">,(</span><span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">times</span><span class=\"p\">),</span><span class=\"mi\">96</span><span class=\"p\">,</span><span class=\"mi\">96</span><span class=\"p\">),</span><span class=\"n\">chunks</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">times</span><span class=\"p\">),</span><span class=\"mi\">48</span><span class=\"p\">,</span><span class=\"mi\">32</span><span class=\"p\">)),</span>\\\n               <span class=\"n\">dims</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s1\">'time'</span><span class=\"p\">,</span><span class=\"s1\">'lat'</span><span class=\"p\">,</span><span class=\"s1\">'lon'</span><span class=\"p\">],</span>\\\n               <span class=\"n\">coords</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"s1\">'time'</span><span class=\"p\">:</span><span class=\"n\">times</span><span class=\"p\">,</span><span class=\"s1\">'lat'</span><span class=\"p\">:</span><span class=\"n\">lats</span><span class=\"p\">,</span><span class=\"s1\">'lon'</span><span class=\"p\">:</span><span class=\"n\">lons</span><span class=\"p\">},</span>\\\n               <span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s1\">'variable'</span><span class=\"p\">)</span>\n\n<span class=\"k\">def</span> <span class=\"nf\">calculate_anomaly</span><span class=\"p\">(</span><span class=\"n\">ds</span><span class=\"p\">):</span>\n    <span class=\"c1\"># from https://nbviewer.jupyter.org/gist/rabernat/30e7b747f0e3583b5b776e4093266114</span>\n    <span class=\"k\">if</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">ds</span><span class=\"p\">[</span><span class=\"s1\">'time'</span><span class=\"p\">])</span> <span class=\"o\">==</span> <span class=\"mi\">0</span><span class=\"p\">:</span>\n        <span class=\"k\">return</span> <span class=\"n\">ds</span>\n    <span class=\"n\">gb</span> <span class=\"o\">=</span> <span class=\"n\">ds</span><span class=\"o\">.</span><span class=\"n\">groupby</span><span class=\"p\">(</span><span class=\"s1\">'time.dayofyear'</span><span class=\"p\">)</span>\n    <span class=\"n\">clim</span> <span class=\"o\">=</span> <span class=\"n\">gb</span><span class=\"o\">.</span><span class=\"n\">mean</span><span class=\"p\">(</span><span class=\"n\">dim</span><span class=\"o\">=</span><span class=\"s1\">'time'</span><span class=\"p\">)</span>\n    <span class=\"k\">return</span> <span class=\"n\">gb</span> <span class=\"o\">-</span> <span class=\"n\">clim</span>\n\n<span class=\"n\">ANOM</span> <span class=\"o\">=</span> <span class=\"n\">xr</span><span class=\"o\">.</span><span class=\"n\">map_blocks</span><span class=\"p\">(</span><span class=\"n\">calculate_anomaly</span><span class=\"p\">,</span><span class=\"n\">X</span><span class=\"p\">)</span>\n<span class=\"n\">ANOM_std</span> <span class=\"o\">=</span> <span class=\"n\">ANOM</span><span class=\"o\">.</span><span class=\"n\">std</span><span class=\"p\">(</span><span class=\"n\">dim</span><span class=\"o\">=</span><span class=\"s1\">'time'</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">load</span><span class=\"p\">()</span>\n</code></pre></div>\n<p>For me, running this (but only with the final line included, triggering the compute) results in:</p>\n<p><code>ValueError: Result from applying user function has unexpected coordinate variables {'dayofyear'}.</code></p>\n<p>I have tried supplying a \"template\" DA with the extra dimension to <code>map_blocks</code> but this for some reason grinds everything to  a halt.<br>\nIf anybody has run into this before I'd really appreciate a hand! Thanks</p>",
        "id": 40927,
        "sender_full_name": "Dafydd Stephenson",
        "timestamp": 1629917115
    },
    {
        "content": "<p>Hi <span class=\"user-mention\" data-user-id=\"184\">@Dafydd Stephenson</span> </p>\n<p>This works for me. I wrote out the anomaly computation to understand what the output looked. like and made minor changes. (<code>drop_vars</code> and <code>template=X</code>)</p>\n<div class=\"codehilite\" data-code-language=\"Python\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"nn\">datetime</span> <span class=\"k\">as</span> <span class=\"nn\">dt</span>\n\n<span class=\"kn\">import</span> <span class=\"nn\">dask.array</span> <span class=\"k\">as</span> <span class=\"nn\">da</span>\n<span class=\"kn\">import</span> <span class=\"nn\">numpy</span> <span class=\"k\">as</span> <span class=\"nn\">np</span>\n<span class=\"kn\">import</span> <span class=\"nn\">xarray</span> <span class=\"k\">as</span> <span class=\"nn\">xr</span>\n\n<span class=\"n\">times</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">arange</span><span class=\"p\">(</span>\n    <span class=\"n\">dt</span><span class=\"o\">.</span><span class=\"n\">datetime</span><span class=\"p\">(</span><span class=\"mi\">1992</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">11</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">),</span>\n    <span class=\"n\">dt</span><span class=\"o\">.</span><span class=\"n\">datetime</span><span class=\"p\">(</span><span class=\"mi\">2021</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">11</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">),</span>\n    <span class=\"n\">dt</span><span class=\"o\">.</span><span class=\"n\">timedelta</span><span class=\"p\">(</span><span class=\"n\">days</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">),</span>\n<span class=\"p\">)</span>\n<span class=\"n\">lats</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">arange</span><span class=\"p\">(</span><span class=\"o\">-</span><span class=\"mi\">90</span><span class=\"p\">,</span> <span class=\"mi\">90</span><span class=\"p\">,</span> <span class=\"mf\">1.875</span><span class=\"p\">)</span>\n<span class=\"n\">lons</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">arange</span><span class=\"p\">(</span><span class=\"o\">-</span><span class=\"mi\">180</span><span class=\"p\">,</span> <span class=\"mi\">180</span><span class=\"p\">,</span> <span class=\"mf\">3.75</span><span class=\"p\">)</span>\n\n<span class=\"n\">X</span> <span class=\"o\">=</span> <span class=\"n\">xr</span><span class=\"o\">.</span><span class=\"n\">DataArray</span><span class=\"p\">(</span>\n    <span class=\"n\">da</span><span class=\"o\">.</span><span class=\"n\">random</span><span class=\"o\">.</span><span class=\"n\">normal</span><span class=\"p\">(</span><span class=\"mi\">5</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"p\">(</span><span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">times</span><span class=\"p\">),</span> <span class=\"mi\">96</span><span class=\"p\">,</span> <span class=\"mi\">96</span><span class=\"p\">),</span> <span class=\"n\">chunks</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">times</span><span class=\"p\">),</span> <span class=\"mi\">48</span><span class=\"p\">,</span> <span class=\"mi\">32</span><span class=\"p\">)),</span>\n    <span class=\"n\">dims</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s2\">\"time\"</span><span class=\"p\">,</span> <span class=\"s2\">\"lat\"</span><span class=\"p\">,</span> <span class=\"s2\">\"lon\"</span><span class=\"p\">],</span>\n    <span class=\"n\">coords</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"s2\">\"time\"</span><span class=\"p\">:</span> <span class=\"n\">times</span><span class=\"p\">,</span> <span class=\"s2\">\"lat\"</span><span class=\"p\">:</span> <span class=\"n\">lats</span><span class=\"p\">,</span> <span class=\"s2\">\"lon\"</span><span class=\"p\">:</span> <span class=\"n\">lons</span><span class=\"p\">},</span>\n    <span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s2\">\"variable\"</span><span class=\"p\">,</span>\n<span class=\"p\">)</span>\n\n\n<span class=\"k\">def</span> <span class=\"nf\">calculate_anomaly</span><span class=\"p\">(</span><span class=\"n\">ds</span><span class=\"p\">):</span>\n    <span class=\"c1\"># from https://nbviewer.jupyter.org/gist/rabernat/30e7b747f0e3583b5b776e4093266114</span>\n    <span class=\"k\">if</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">ds</span><span class=\"p\">[</span><span class=\"s2\">\"time\"</span><span class=\"p\">])</span> <span class=\"o\">==</span> <span class=\"mi\">0</span><span class=\"p\">:</span>\n        <span class=\"k\">return</span> <span class=\"n\">ds</span>\n    <span class=\"n\">gb</span> <span class=\"o\">=</span> <span class=\"n\">ds</span><span class=\"o\">.</span><span class=\"n\">groupby</span><span class=\"p\">(</span><span class=\"s2\">\"time.dayofyear\"</span><span class=\"p\">)</span>\n    <span class=\"n\">clim</span> <span class=\"o\">=</span> <span class=\"n\">gb</span><span class=\"o\">.</span><span class=\"n\">mean</span><span class=\"p\">(</span><span class=\"n\">dim</span><span class=\"o\">=</span><span class=\"s2\">\"time\"</span><span class=\"p\">)</span>\n    <span class=\"c1\"># drop this extra dayofyear because it seems useless</span>\n    <span class=\"k\">return</span> <span class=\"p\">(</span><span class=\"n\">gb</span> <span class=\"o\">-</span> <span class=\"n\">clim</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">drop_vars</span><span class=\"p\">(</span><span class=\"s2\">\"dayofyear\"</span><span class=\"p\">)</span>\n\n\n<span class=\"c1\">#  used this to understand the expected output</span>\n<span class=\"c1\">#template = (X.groupby(\"time.dayofyear\") - X.groupby(\"time.dayofyear\").mean()).chunk(</span>\n<span class=\"c1\">#    {\"time\": -1}</span>\n<span class=\"c1\">#)</span>\n\n<span class=\"n\">ANOM</span> <span class=\"o\">=</span> <span class=\"n\">xr</span><span class=\"o\">.</span><span class=\"n\">map_blocks</span><span class=\"p\">(</span><span class=\"n\">calculate_anomaly</span><span class=\"p\">,</span> <span class=\"n\">X</span><span class=\"p\">,</span> <span class=\"n\">template</span><span class=\"o\">=</span><span class=\"n\">X</span><span class=\"p\">)</span>\n<span class=\"n\">ANOM_std</span> <span class=\"o\">=</span> <span class=\"n\">ANOM</span><span class=\"o\">.</span><span class=\"n\">std</span><span class=\"p\">(</span><span class=\"n\">dim</span><span class=\"o\">=</span><span class=\"s1\">'time'</span><span class=\"p\">)</span>\n<span class=\"n\">ANOM_std</span><span class=\"o\">.</span><span class=\"n\">compute</span><span class=\"p\">()</span>\n</code></pre></div>",
        "id": 41843,
        "sender_full_name": "Deepak Cherian",
        "timestamp": 1630683873
    }
]