[
    {
        "content": "<p>I would like to reorder a dataset from alphabetical to a specific order for plotting. I've used the <code>reindex</code> function, but this results in a plotting error.  Plotting works fine without reordering, so it seems that something associated with using <code>reindex</code>. Why doesn't this work for plotting? Is there a better way to reorder a dataset? </p>\n<p>Example code:</p>\n<div class=\"codehilite\"><pre><span></span>ds = df.set_index([&#39;time&#39;, &#39;name&#39;])[[&#39;co2&#39;]].to_xarray()\n#Plotting works without this line, but out of order.\n#Reindexing changes the order but results in error message about coordinates\nds = ds.reindex(name=[&quot;Mauna Loa&quot;, &quot;Niwot Ridge&quot;, &quot;Barrow&quot;])\n\ngrouped = ds.groupby(&#39;name&#39;)\ndsets = []\nfor site, dataset in grouped:\n    g = dataset.groupby(&#39;time.year&#39;)\n    r = (g.max() - g.min())\n    dsets.append(r)\nx = xr.concat(dsets, dim=&#39;name&#39;)\n\npanel = [&#39;(d)&#39;,&#39;(e)&#39;,&#39;(f)&#39;] #to label panels\nfig = plt.figure(figsize=(10,3))\nplt.subplots_adjust(hspace=0.01, wspace=0.01)\n\nfor i in range(len(x.name)):\n    ax = fig.add_subplot(1,3,i+1)\n    data = x.co2[i,:]\n    data.plot(color=&#39;black&#39;, label=&#39;observations&#39;)\n</pre></div>\n\n\n<p>Error message:</p>\n<div class=\"codehilite\"><pre><span></span>TypeError: Plotting requires coordinates to be numeric, boolean, or dates of type numpy.datetime64, datetime.datetime, cftime.datetime or pandas.Interval. Received data of type object instead.\n</pre></div>",
        "id": 33478,
        "sender_full_name": "Danica Lombardozzi",
        "timestamp": 1622831952
    },
    {
        "content": "<p>Hi <span class=\"user-mention\" data-user-id=\"74\">@Danica Lombardozzi</span> , what do you want to reorder it by? I sort mine by time using this structure: <code>ds_wdt_vmix_iso = ds_wdt_vmix_iso.sortby(ds_wdt_vmix_iso.time)</code><br>\nI've also had the plotting error before, it doesn't seem to recognize the axis against which to plot. Does something like this work <code>plt.plot(data.name, data.*whateveryourvariableis*)</code> ?</p>",
        "id": 33479,
        "sender_full_name": "Anna-Lena Deppenmeier",
        "timestamp": 1622832026
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"27\">@Anna-Lena Deppenmeier</span> , thanks for the suggestion. I challenge is that I'm trying to reorder by the site name, not something continuous like time. It's currently ordered alphabetically, but I want a specific (non-alphabetical) order. </p>\n<p>The only thing that changes in the plotting is the order of the site names (which is also what the plotting is looping over -- one panel per site), so I don't think (or understand why) this should change anything about the plotting axes (time, co2).</p>",
        "id": 33482,
        "sender_full_name": "Danica Lombardozzi",
        "timestamp": 1622835116
    },
    {
        "content": "<p>it does plot before you reorder?  I will say I don't think I understand your dataset and it is a bit hard for me to help without seeing what it looks like. can you paste the output of <code>ds</code> before and after reindexing?</p>",
        "id": 33483,
        "sender_full_name": "Anna-Lena Deppenmeier",
        "timestamp": 1622835236
    },
    {
        "content": "<p>Yes, it does plot before I reorder. I'm attaching a screenshot of the dataset before and after reordering.</p>\n<p><a href=\"/user_uploads/2/53/dF0ecUkmhVMDB61-CsioGuBI/Screen-Shot-2021-06-04-at-1.57.32-PM.png\" target=\"_blank\" title=\"Screen-Shot-2021-06-04-at-1.57.32-PM.png\">Screen-Shot-2021-06-04-at-1.57.32-PM.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/2/53/dF0ecUkmhVMDB61-CsioGuBI/Screen-Shot-2021-06-04-at-1.57.32-PM.png\" target=\"_blank\" title=\"Screen-Shot-2021-06-04-at-1.57.32-PM.png\"><img src=\"/user_uploads/2/53/dF0ecUkmhVMDB61-CsioGuBI/Screen-Shot-2021-06-04-at-1.57.32-PM.png\"></a></div>",
        "id": 33493,
        "sender_full_name": "Danica Lombardozzi",
        "timestamp": 1622836728
    },
    {
        "content": "<p>Sorry Danica, I can't help you. We need someone who knows more about xarray's plotting intricacies <span class=\"user-mention\" data-user-id=\"134\">@Max Grover</span> <span class=\"user-mention\" data-user-id=\"13\">@Anderson Banihirwe</span> <span class=\"user-mention\" data-user-id=\"25\">@Deepak Cherian</span></p>",
        "id": 33497,
        "sender_full_name": "Anna-Lena Deppenmeier",
        "timestamp": 1622836813
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"74\">@Danica Lombardozzi</span> could you share a code snippet (or a link to the data to the data you are working with?)</p>",
        "id": 33498,
        "sender_full_name": "Max Grover",
        "timestamp": 1622836849
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"134\">@Max Grover</span> Does the code snippet at the top of this thread give you enough information? I'll paste it here, too, so you can see it more easily.</p>\n<p>Example code:</p>\n<div class=\"codehilite\"><pre><span></span>ds = df.set_index([&#39;time&#39;, &#39;name&#39;])[[&#39;co2&#39;]].to_xarray()\n#Plotting works without this line, but out of order.\n#Reindexing changes the order but results in error message about coordinates\nds = ds.reindex(name=[&quot;Mauna Loa&quot;, &quot;Niwot Ridge&quot;, &quot;Barrow&quot;])\n\ngrouped = ds.groupby(&#39;name&#39;)\ndsets = []\nfor site, dataset in grouped:\n    g = dataset.groupby(&#39;time.year&#39;)\n    r = (g.max() - g.min())\n    dsets.append(r)\nx = xr.concat(dsets, dim=&#39;name&#39;)\n\npanel = [&#39;(d)&#39;,&#39;(e)&#39;,&#39;(f)&#39;] #to label panels\nfig = plt.figure(figsize=(10,3))\nplt.subplots_adjust(hspace=0.01, wspace=0.01)\n\nfor i in range(len(x.name)):\n    ax = fig.add_subplot(1,3,i+1)\n    data = x.co2[i,:]\n    data.plot(color=&#39;black&#39;, label=&#39;observations&#39;)\n</pre></div>\n\n\n<p>Error message:</p>\n<div class=\"codehilite\"><pre><span></span>TypeError: Plotting requires coordinates to be numeric, boolean, or dates of type numpy.datetime64, datetime.datetime, cftime.datetime or pandas.Interval. Received data of type object instead.\n</pre></div>",
        "id": 33501,
        "sender_full_name": "Danica Lombardozzi",
        "timestamp": 1622836940
    },
    {
        "content": "<p>It would be helpful to see what dataset you are working with - is it on glade?</p>",
        "id": 33505,
        "sender_full_name": "Max Grover",
        "timestamp": 1622836978
    },
    {
        "content": "<p>It's one that I've created in my script from data on glade. The script I'm working with is here: /glade/work/dll/CTSM_py/notebooks/CO2Amplitude_ObsVsModel.ipynb</p>\n<p>It's a little messy, but the relevant lines of code I pasted above are just below the markdown cells <code>Obs data: Calculating amplitude for each site</code> and <code>Plotting amplitude time series</code>. The dataset is created near the beginning of the script (well before the above code) under the markdown cell <code>Looping over all observational sites to read in file</code></p>",
        "id": 33514,
        "sender_full_name": "Danica Lombardozzi",
        "timestamp": 1622837283
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"74\">@Danica Lombardozzi</span> the following seemed to work for me</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"n\">ds</span> <span class=\"o\">=</span> <span class=\"n\">df</span><span class=\"o\">.</span><span class=\"n\">set_index</span><span class=\"p\">([</span><span class=\"s1\">&#39;time&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;name&#39;</span><span class=\"p\">])[[</span><span class=\"s1\">&#39;co2&#39;</span><span class=\"p\">]]</span><span class=\"o\">.</span><span class=\"n\">to_xarray</span><span class=\"p\">()</span>\n<span class=\"n\">grouped</span> <span class=\"o\">=</span> <span class=\"n\">ds</span><span class=\"o\">.</span><span class=\"n\">groupby</span><span class=\"p\">(</span><span class=\"s1\">&#39;name&#39;</span><span class=\"p\">)</span>\n<span class=\"n\">dsets</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n<span class=\"k\">for</span> <span class=\"n\">site</span><span class=\"p\">,</span> <span class=\"n\">dataset</span> <span class=\"ow\">in</span> <span class=\"n\">grouped</span><span class=\"p\">:</span>\n    <span class=\"n\">g</span> <span class=\"o\">=</span> <span class=\"n\">dataset</span><span class=\"o\">.</span><span class=\"n\">groupby</span><span class=\"p\">(</span><span class=\"s1\">&#39;time.year&#39;</span><span class=\"p\">)</span>\n    <span class=\"n\">r</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"n\">g</span><span class=\"o\">.</span><span class=\"n\">max</span><span class=\"p\">()</span> <span class=\"o\">-</span> <span class=\"n\">g</span><span class=\"o\">.</span><span class=\"n\">min</span><span class=\"p\">())</span>\n    <span class=\"n\">dsets</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">r</span><span class=\"p\">)</span>\n<span class=\"n\">x</span> <span class=\"o\">=</span> <span class=\"n\">xr</span><span class=\"o\">.</span><span class=\"n\">concat</span><span class=\"p\">(</span><span class=\"n\">dsets</span><span class=\"p\">,</span> <span class=\"n\">dim</span><span class=\"o\">=</span><span class=\"s1\">&#39;name&#39;</span><span class=\"p\">)</span>\n\n<span class=\"n\">x</span><span class=\"o\">.</span><span class=\"n\">co2</span><span class=\"o\">.</span><span class=\"n\">plot</span><span class=\"p\">(</span><span class=\"n\">col</span><span class=\"o\">=</span><span class=\"s1\">&#39;name&#39;</span><span class=\"p\">,</span> <span class=\"n\">col_wrap</span><span class=\"o\">=</span><span class=\"mi\">3</span><span class=\"p\">)</span>\n\n<span class=\"n\">panel</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s1\">&#39;(d)&#39;</span><span class=\"p\">,</span><span class=\"s1\">&#39;(e)&#39;</span><span class=\"p\">,</span><span class=\"s1\">&#39;(f)&#39;</span><span class=\"p\">]</span> <span class=\"c1\">#to label panels</span>\n<span class=\"n\">fig</span> <span class=\"o\">=</span> <span class=\"n\">plt</span><span class=\"o\">.</span><span class=\"n\">figure</span><span class=\"p\">(</span><span class=\"n\">figsize</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"mi\">10</span><span class=\"p\">,</span><span class=\"mi\">3</span><span class=\"p\">))</span>\n<span class=\"n\">plt</span><span class=\"o\">.</span><span class=\"n\">subplots_adjust</span><span class=\"p\">(</span><span class=\"n\">hspace</span><span class=\"o\">=</span><span class=\"mf\">0.01</span><span class=\"p\">,</span> <span class=\"n\">wspace</span><span class=\"o\">=</span><span class=\"mf\">0.01</span><span class=\"p\">)</span>\n\n<span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"p\">)):</span>\n    <span class=\"n\">ax</span> <span class=\"o\">=</span> <span class=\"n\">fig</span><span class=\"o\">.</span><span class=\"n\">add_subplot</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"mi\">3</span><span class=\"p\">,</span><span class=\"n\">i</span><span class=\"o\">+</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n   <span class=\"c1\"># Replaced x.co2[i, :] with this</span>\n    <span class=\"n\">data</span> <span class=\"o\">=</span> <span class=\"n\">x</span><span class=\"o\">.</span><span class=\"n\">co2</span><span class=\"p\">[:,</span><span class=\"n\">i</span><span class=\"p\">]</span>\n    <span class=\"n\">data</span><span class=\"o\">.</span><span class=\"n\">plot</span><span class=\"p\">(</span><span class=\"n\">color</span><span class=\"o\">=</span><span class=\"s1\">&#39;black&#39;</span><span class=\"p\">,</span> <span class=\"n\">label</span><span class=\"o\">=</span><span class=\"s1\">&#39;observations&#39;</span><span class=\"p\">)</span>\n</pre></div>\n\n\n<p>The main issue xarray/numpy runs into is that you are indexing co2 using <code>(name, year)</code> in the second to last line, instead of  matching the dimensionality of the data <code>(year, name)</code>. This switches when you set the index <code>['time', 'name']</code> in the first line! I hope this helps!!</p>",
        "id": 33516,
        "sender_full_name": "Max Grover",
        "timestamp": 1622839620
    },
    {
        "content": "<p>Thanks <span class=\"user-mention\" data-user-id=\"134\">@Max Grover</span> ! I ran out of time to test this today, but I will test it out over the weekend. Good to know that the order of the indexing in the plotting loop was causing the problem.</p>",
        "id": 33538,
        "sender_full_name": "Danica Lombardozzi",
        "timestamp": 1622857265
    },
    {
        "content": "<p>This seems to do what you want</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"kn\">import</span> <span class=\"nn\">numpy</span> <span class=\"k\">as</span> <span class=\"nn\">np</span>\n<span class=\"kn\">import</span> <span class=\"nn\">pandas</span> <span class=\"k\">as</span> <span class=\"nn\">pd</span>\n<span class=\"kn\">import</span> <span class=\"nn\">xarray</span> <span class=\"k\">as</span> <span class=\"nn\">xr</span>\n<span class=\"kn\">import</span> <span class=\"nn\">matplotlib.pyplot</span> <span class=\"k\">as</span> <span class=\"nn\">plt</span>\n\n\n<span class=\"n\">ds</span> <span class=\"o\">=</span> <span class=\"n\">xr</span><span class=\"o\">.</span><span class=\"n\">Dataset</span><span class=\"p\">()</span>\n<span class=\"n\">ds</span><span class=\"p\">[</span><span class=\"s2\">&quot;co2&quot;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">xr</span><span class=\"o\">.</span><span class=\"n\">DataArray</span><span class=\"p\">(</span>\n    <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">random</span><span class=\"o\">.</span><span class=\"n\">randn</span><span class=\"p\">(</span><span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">732</span><span class=\"p\">),</span>\n    <span class=\"n\">dims</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"s2\">&quot;name&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;time&quot;</span><span class=\"p\">),</span>\n    <span class=\"n\">coords</span><span class=\"o\">=</span><span class=\"p\">{</span>\n        <span class=\"s2\">&quot;name&quot;</span><span class=\"p\">:</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"p\">([</span><span class=\"s2\">&quot;Barrow&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;Mauna Loa&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;Niwot Ridge&quot;</span><span class=\"p\">],</span> <span class=\"n\">dtype</span><span class=\"o\">=</span><span class=\"nb\">object</span><span class=\"p\">),</span>\n        <span class=\"s2\">&quot;time&quot;</span><span class=\"p\">:</span> <span class=\"n\">pd</span><span class=\"o\">.</span><span class=\"n\">date_range</span><span class=\"p\">(</span><span class=\"s2\">&quot;1959-01-01&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;2019-12-01&quot;</span><span class=\"p\">,</span> <span class=\"n\">periods</span><span class=\"o\">=</span><span class=\"mi\">732</span><span class=\"p\">),</span>\n    <span class=\"p\">},</span>\n<span class=\"p\">)</span>\n<span class=\"n\">ds</span> <span class=\"o\">=</span> <span class=\"n\">ds</span><span class=\"o\">.</span><span class=\"n\">reindex</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s2\">&quot;Mauna Loa&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;Niwot Ridge&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;Barrow&quot;</span><span class=\"p\">])</span>\n\n<span class=\"c1\"># Specify &quot;time&quot; in min, max so that the &quot;name&quot; dimension is preserved</span>\n<span class=\"n\">x</span> <span class=\"o\">=</span> <span class=\"n\">ds</span><span class=\"o\">.</span><span class=\"n\">groupby</span><span class=\"p\">(</span><span class=\"s2\">&quot;time.year&quot;</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">map</span><span class=\"p\">(</span><span class=\"k\">lambda</span> <span class=\"n\">g</span><span class=\"p\">:</span> <span class=\"n\">g</span><span class=\"o\">.</span><span class=\"n\">max</span><span class=\"p\">(</span><span class=\"s2\">&quot;time&quot;</span><span class=\"p\">)</span> <span class=\"o\">-</span> <span class=\"n\">g</span><span class=\"o\">.</span><span class=\"n\">min</span><span class=\"p\">(</span><span class=\"s2\">&quot;time&quot;</span><span class=\"p\">))</span>\n<span class=\"n\">x</span><span class=\"o\">.</span><span class=\"n\">co2</span><span class=\"o\">.</span><span class=\"n\">plot</span><span class=\"p\">(</span><span class=\"n\">col</span><span class=\"o\">=</span><span class=\"s2\">&quot;name&quot;</span><span class=\"p\">)</span>  <span class=\"c1\">#  &#39;facet&#39; using the &#39;col&#39; kwarg</span>\n</pre></div>\n\n\n<p>Xarray makes this kind of plotting really easy. See <a href=\"https://xarray.pydata.org/en/stable/user-guide/plotting.html#faceting\" target=\"_blank\" title=\"https://xarray.pydata.org/en/stable/user-guide/plotting.html#faceting\">the docs</a> for more on \"faceted\" plots or subplots.</p>",
        "id": 33539,
        "sender_full_name": "Deepak Cherian",
        "timestamp": 1622919113
    },
    {
        "content": "<p>Thanks <span class=\"user-mention\" data-user-id=\"25\">@Deepak Cherian</span> ! This works to plot the observations in the order I'd like them. However, I want to also overlay values from CESM simulations (3 lines per plot), which are in a python dictionary and I can't figure out how to overlay the dictionary values properly since I can't specify <code>CESM2dictionary.co2.plot</code> for a dictionary (I'm still relatively new to python and plotting). </p>\n<p>I also don't understand the what the <code>.map(lambda g: ... )</code> does (or why it's needed). It works, but if you can help me to understand what it's doing, I'd appreciate it! </p>\n<p>The fix that <span class=\"user-mention\" data-user-id=\"134\">@Max Grover</span> shared works solve the plotting error I was getting, but the values are not plotting in the order I specified using the <code>reindex</code> function.</p>",
        "id": 33648,
        "sender_full_name": "Danica Lombardozzi",
        "timestamp": 1623089194
    },
    {
        "content": "<p><code>map</code> is described <a href=\"https://xarray.pydata.org/en/stable/user-guide/groupby.html#apply\" target=\"_blank\" title=\"https://xarray.pydata.org/en/stable/user-guide/groupby.html#apply\">here</a> . It lets you apply a custom function to each group individually and concatenates the results back together (which is what you were doing with that for loop). Your custom function will receive an xarray object corresponding to each group (here for each year)</p>\n<p>What does your dictionary look like?</p>\n<p>If you save the returned object from plot</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"n\">fg</span> <span class=\"o\">=</span> <span class=\"n\">x</span><span class=\"o\">.</span><span class=\"n\">co2</span><span class=\"o\">.</span><span class=\"n\">plot</span><span class=\"p\">(</span><span class=\"n\">col</span><span class=\"o\">=</span><span class=\"s2\">&quot;name&quot;</span><span class=\"p\">)</span>\n</pre></div>\n\n\n<p>then <code>fg.axes</code> will give you the actual axes for the plots in the figure. So you can always plot to those and make more complicated figures.</p>",
        "id": 33651,
        "sender_full_name": "Deepak Cherian",
        "timestamp": 1623089528
    },
    {
        "content": "<p>Thanks for the info on <code>map</code> -- I'll have to play with it to understand it better. I was able to figure out the plotting, too. I appreciate your help!</p>",
        "id": 33665,
        "sender_full_name": "Danica Lombardozzi",
        "timestamp": 1623092162
    }
]