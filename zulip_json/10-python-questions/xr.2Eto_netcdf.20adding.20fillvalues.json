[
    {
        "content": "<p>I am trying to use xarray to read in a netcdf file (a CAM timeseries file), modify a<br>\nfew fields, and then save as a new netcdf file. Here's a simplified<br>\nversion:</p>\n<p>import xarray as xr<br>\nmyfile_orig = '/Users/abaker/alli/compression/statistical/prect/orig-data/PRECT.orig.ts10000.nc' <br>\nds = xr.open_dataset(myfile_orig)<br>\nnew_file = '<a href=\"http://Copy.nc\" target=\"_blank\" title=\"http://Copy.nc\">Copy.nc</a>'<br>\nds.to_netcdf(new_file, engine = 'netcdf4', format='NETCDF4')</p>\n<p>It appears that the xr.to_netcdf()  function adds a     _FillValue: nan to every variable.<br>\n(This causes another code I have to fail as the coordinate variables<br>\nare not supposed to have this). For example:</p>\n<p>(py372) cisl-duluth:prect abaker$ ncinfo -v lon <a href=\"http://Copy.nc\" target=\"_blank\" title=\"http://Copy.nc\">Copy.nc</a> <br>\n&lt;class 'netCDF4._netCDF4.Variable'&gt;<br>\nfloat64 lon(lon)<br>\n    _FillValue: nan<br>\n    long_name: longitude<br>\n    units: degrees_east<br>\nunlimited dimensions: <br>\ncurrent shape = (288,)<br>\nfilling on</p>\n<p>(py372) cisl-duluth:prect abaker$ ncinfo -v lon  orig-data/PRECT.orig.ts10000.nc <br>\n&lt;class 'netCDF4._netCDF4.Variable'&gt;<br>\nfloat64 lon(lon)<br>\n    long_name: longitude<br>\n    units: degrees_east<br>\nunlimited dimensions: <br>\ncurrent shape = (288,)<br>\nfilling on, default _FillValue of 9.969209968386869e+36 used</p>\n<p>In this stackflow thread:<br>\n<a href=\"https://stackoverflow.com/questions/45693688/xarray-automatically-applying-fillvalue-to-coordinates-on-netcdf-output\" target=\"_blank\" title=\"https://stackoverflow.com/questions/45693688/xarray-automatically-applying-fillvalue-to-coordinates-on-netcdf-output\">https://stackoverflow.com/questions/45693688/xarray-automatically-applying-fillvalue-to-coordinates-on-netcdf-output</a><br>\nIt suggests to set the encoding for each variable to False before call<br>\nto_netcdf(), e.g.:     ds.lon.encoding['_FillValue'] = False</p>\n<p>While this works, it seems that there might be a more global way to<br>\ndo this without having to modify the encoding for each variable.<br>\n(I tried  setting ds.encoding['_FillValue'] = False, but that did not affect anything )</p>\n<p>There is another related post here:<br>\n<a href=\"https://github.com/pydata/xarray/issues/1598\" target=\"_blank\" title=\"https://github.com/pydata/xarray/issues/1598\">https://github.com/pydata/xarray/issues/1598</a></p>\n<p>But it still seems that this must be done on a variable by variable basis.<br>\nIs that true or does anyone know a different way?   Thanks.</p>",
        "id": 2272,
        "sender_full_name": "Allison Baker",
        "timestamp": 1583271923
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"42\">@Allison Baker</span>, </p>\n<blockquote>\n<p>But it still seems that this must be done on a variable by variable basis.<br/>\nIs that true or does anyone know a different way? </p>\n</blockquote>\n<p>Internally, xarray checks the data type of  each variable in order to assign it a default <code>_FillValue</code>. Because of this, setting <code>ds.encoding['_FillValue'] = False</code> globally does not work. One solution is to loop through all variables: </p>\n<div class=\"codehilite\"><pre><span></span><span class=\"k\">for</span> <span class=\"n\">v</span> <span class=\"ow\">in</span> <span class=\"n\">ds</span><span class=\"o\">.</span><span class=\"n\">variables</span><span class=\"p\">:</span>\n    <span class=\"k\">if</span> <span class=\"s1\">'_FillValue'</span> <span class=\"ow\">not</span> <span class=\"ow\">in</span> <span class=\"n\">ds</span><span class=\"p\">[</span><span class=\"n\">v</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">encoding</span><span class=\"p\">:</span>\n        <span class=\"n\">ds</span><span class=\"p\">[</span><span class=\"n\">v</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">encoding</span><span class=\"p\">[</span><span class=\"s1\">'_FillValue'</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"bp\">None</span>\n</pre></div>",
        "id": 2275,
        "sender_full_name": "Anderson Banihirwe",
        "timestamp": 1583275827
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"13\">@Anderson Banihirwe</span>  - Thanks for clarifying and for the suggestion.</p>",
        "id": 2313,
        "sender_full_name": "Allison Baker",
        "timestamp": 1583341677
    },
    {
        "content": "<p>Following up on this same example, the other thing happening is that<br>\nmy dimension \"chars=8\" gets changed to \"string8 = 8\".  For example,</p>\n<p>(py372) cisl-duluth:prect abaker$ ncdump -h <a href=\"http://Copy.nc\" target=\"_blank\" title=\"http://Copy.nc\">Copy.nc</a> <br>\nnetcdf Copy {<br>\ndimensions:<br>\n    time = UNLIMITED ; // (1 currently)<br>\n    lat = 192 ;<br>\n    lon = 288 ;<br>\n    string8 = 8 ;<br>\n    ilev = 31 ;<br>\n    lev = 30 ;<br>\n    slat = 191 ;<br>\n    slon = 288 ;<br>\n    nbnd = 2 ;</p>\n<p>(py372) cisl-duluth:prect abaker$ ncdump -h orig-data/PRECT.orig.ts10000.nc <br>\nnetcdf PRECT.orig.ts10000 {<br>\ndimensions:<br>\n    time = UNLIMITED ; // (1 currently)<br>\n    lat = 192 ;<br>\n    lon = 288 ;<br>\n    chars = 8 ;<br>\n    ilev = 31 ;<br>\n    lev = 30 ;<br>\n    slat = 191 ;<br>\n    slon = 288 ;<br>\n    nbnd = 2 ;</p>\n<p>I see that when I read in the dataset, chars is not in the dims:<br>\nIn [12]: ds.dims                                                                                                                                 <br>\nOut[12]: Frozen(SortedKeysDict({'time': 1, 'lat': 192, 'lon': 288, 'ilev': 31, 'lev': 30, 'slat': 191, 'slon': 288, 'nbnd': 2}))</p>\n<p>I have been post-processing the file with a nco tool to change it back<br>\n(ncrename -d string8,chars <a href=\"http://Copy.nc\" target=\"_blank\" title=\"http://Copy.nc\">Copy.nc</a>), but would  rather fix it in my<br>\npython script if anyone knows how to do that....</p>\n<p>Thanks!</p>",
        "id": 2323,
        "sender_full_name": "Allison Baker",
        "timestamp": 1583342879
    },
    {
        "content": "<p>Yeah, I think this is clearly a bug in Xarray.  The way that Xarray documentation says to handle this is to add the 'char_dim_name<code> to the variable's </code>encoding<code> (e.g., </code>var.encoding['char_dim_name'] = 'chars'`), but this does not work.  </p>\n<p>And, as a separate issue, the <code>char_dim_name</code> encoding value should be stored in the variable's encoding at <em>read</em>-time, when the Xarray Dataset is created.  But it is not.</p>",
        "id": 2326,
        "sender_full_name": "Kevin Paul",
        "timestamp": 1583343492
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"42\">@Allison Baker</span>,  when you get a chance, can you point me to the file or send me the file you are using? I'd like to use it to  open an issue  in the xarray repo.  Thanks!</p>",
        "id": 2396,
        "sender_full_name": "Anderson Banihirwe",
        "timestamp": 1583371341
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"42\">@Allison Baker</span>’s file might be too big to upload. However, I’m sure we can extract a smaller piece of the file (e.g., 1 timestep) that can reproduce the problem.</p>",
        "id": 2397,
        "sender_full_name": "Kevin Paul",
        "timestamp": 1583379966
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"13\">@Anderson Banihirwe</span>  Yes - I attached <a href=\"/user_uploads/2/1RYjJ_C76x0Y-GLQcePDr85-/PRECT.orig.ts10000.nc\" target=\"_blank\" title=\"PRECT.orig.ts10000.nc\">PRECT.orig.ts10000.nc</a> my single timeslice file.</p>",
        "id": 2408,
        "sender_full_name": "Allison Baker",
        "timestamp": 1583427029
    },
    {
        "content": "<blockquote>\n<p>I see that when I read in the dataset, chars is not in the dims:<br/>\nIn [12]: ds.dims                                                                                                                                 <br/>\nOut[12]: Frozen(SortedKeysDict({'time': 1, 'lat': 192, 'lon': 288, 'ilev': 31, 'lev': 30, 'slat': 191, 'slon': 288, 'nbnd': 2}))</p>\n<p>I have been post-processing the file with a nco tool to change it back<br/>\n(ncrename -d string8,chars <a href=\"http://Copy.nc\" target=\"_blank\" title=\"http://Copy.nc\">Copy.nc</a>), but would  rather fix it in my<br/>\npython script if anyone knows how to do that....</p>\n</blockquote>\n<p><span class=\"user-mention\" data-user-id=\"42\">@Allison Baker</span> </p>\n<p>I can confirm that the <code>chars</code> is not in the dims, however, <strong>I am not getting the <code>string8 = 8 </code> issue</strong>.  According to the <a href=\"https://xarray.pydata.org/en/stable/io.html#string-encoding\" target=\"_blank\" title=\"https://xarray.pydata.org/en/stable/io.html#string-encoding\">documentation</a>, xarray is keeping tracking of <code>chars</code> dim in the encoding of every variable that has this dimension. When I write the dataset back, the <code>chars</code> is present in netCDF:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"n\">In</span> <span class=\"p\">[</span><span class=\"mi\">4</span><span class=\"p\">]:</span> <span class=\"n\">ds</span> <span class=\"o\">=</span> <span class=\"n\">xr</span><span class=\"o\">.</span><span class=\"n\">open_dataset</span><span class=\"p\">(</span><span class=\"s2\">\"PRECT.orig.ts10000.nc\"</span><span class=\"p\">)</span>\n\n<span class=\"n\">In</span> <span class=\"p\">[</span><span class=\"mi\">5</span><span class=\"p\">]:</span> <span class=\"n\">ds</span><span class=\"o\">.</span><span class=\"n\">dims</span>\n<span class=\"n\">Out</span><span class=\"p\">[</span><span class=\"mi\">5</span><span class=\"p\">]:</span> <span class=\"n\">Frozen</span><span class=\"p\">(</span><span class=\"n\">SortedKeysDict</span><span class=\"p\">({</span><span class=\"s1\">'time'</span><span class=\"p\">:</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"s1\">'lat'</span><span class=\"p\">:</span> <span class=\"mi\">192</span><span class=\"p\">,</span> <span class=\"s1\">'lon'</span><span class=\"p\">:</span> <span class=\"mi\">288</span><span class=\"p\">,</span> <span class=\"s1\">'ilev'</span><span class=\"p\">:</span> <span class=\"mi\">31</span><span class=\"p\">,</span> <span class=\"s1\">'lev'</span><span class=\"p\">:</span> <span class=\"mi\">30</span><span class=\"p\">,</span> <span class=\"s1\">'slat'</span><span class=\"p\">:</span> <span class=\"mi\">191</span><span class=\"p\">,</span> <span class=\"s1\">'slon'</span><span class=\"p\">:</span> <span class=\"mi\">288</span><span class=\"p\">,</span> <span class=\"s1\">'nbnd'</span><span class=\"p\">:</span> <span class=\"mi\">2</span><span class=\"p\">}))</span>\n\n<span class=\"n\">In</span> <span class=\"p\">[</span><span class=\"mi\">6</span><span class=\"p\">]:</span> <span class=\"n\">ds</span><span class=\"o\">.</span><span class=\"n\">date_written</span>\n<span class=\"n\">Out</span><span class=\"p\">[</span><span class=\"mi\">6</span><span class=\"p\">]:</span>\n<span class=\"o\">&lt;</span><span class=\"n\">xarray</span><span class=\"o\">.</span><span class=\"n\">DataArray</span> <span class=\"s1\">'date_written'</span> <span class=\"p\">(</span><span class=\"n\">time</span><span class=\"p\">:</span> <span class=\"mi\">1</span><span class=\"p\">)</span><span class=\"o\">&gt;</span>\n<span class=\"n\">array</span><span class=\"p\">([</span><span class=\"sa\">b</span><span class=\"s1\">'03/02/20'</span><span class=\"p\">],</span> <span class=\"n\">dtype</span><span class=\"o\">=</span><span class=\"s1\">'|S8'</span><span class=\"p\">)</span>\n<span class=\"n\">Coordinates</span><span class=\"p\">:</span>\n  <span class=\"o\">*</span> <span class=\"n\">time</span>     <span class=\"p\">(</span><span class=\"n\">time</span><span class=\"p\">)</span> <span class=\"nb\">object</span> <span class=\"mi\">1947</span><span class=\"o\">-</span><span class=\"mo\">05</span><span class=\"o\">-</span><span class=\"mi\">26</span> <span class=\"mo\">00</span><span class=\"p\">:</span><span class=\"mo\">00</span><span class=\"p\">:</span><span class=\"mo\">00</span>\n\n<span class=\"n\">In</span> <span class=\"p\">[</span><span class=\"mi\">7</span><span class=\"p\">]:</span> <span class=\"n\">ds</span><span class=\"o\">.</span><span class=\"n\">date_written</span><span class=\"o\">.</span><span class=\"n\">encoding</span>\n<span class=\"n\">Out</span><span class=\"p\">[</span><span class=\"mi\">7</span><span class=\"p\">]:</span>\n<span class=\"p\">{</span><span class=\"s1\">'zlib'</span><span class=\"p\">:</span> <span class=\"bp\">True</span><span class=\"p\">,</span>\n <span class=\"s1\">'shuffle'</span><span class=\"p\">:</span> <span class=\"bp\">True</span><span class=\"p\">,</span>\n <span class=\"s1\">'complevel'</span><span class=\"p\">:</span> <span class=\"mi\">1</span><span class=\"p\">,</span>\n <span class=\"s1\">'fletcher32'</span><span class=\"p\">:</span> <span class=\"bp\">False</span><span class=\"p\">,</span>\n <span class=\"s1\">'contiguous'</span><span class=\"p\">:</span> <span class=\"bp\">False</span><span class=\"p\">,</span>\n <span class=\"s1\">'chunksizes'</span><span class=\"p\">:</span> <span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">8</span><span class=\"p\">),</span>\n <span class=\"s1\">'source'</span><span class=\"p\">:</span> <span class=\"s1\">'/Users/abanihi/devel/tmp_notebooks/xarray/PRECT.orig.ts10000.nc'</span><span class=\"p\">,</span>\n <span class=\"s1\">'original_shape'</span><span class=\"p\">:</span> <span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">8</span><span class=\"p\">),</span>\n <span class=\"s1\">'dtype'</span><span class=\"p\">:</span> <span class=\"n\">dtype</span><span class=\"p\">(</span><span class=\"s1\">'S1'</span><span class=\"p\">),</span>\n <span class=\"s1\">'char_dim_name'</span><span class=\"p\">:</span> <span class=\"s1\">'chars'</span><span class=\"p\">}</span>\n</pre></div>\n<div class=\"codehilite\"><pre><span></span><span class=\"n\">In</span> <span class=\"p\">[</span><span class=\"mi\">8</span><span class=\"p\">]:</span> <span class=\"n\">ds</span><span class=\"o\">.</span><span class=\"n\">to_netcdf</span><span class=\"p\">(</span><span class=\"s2\">\"test.nc\"</span><span class=\"p\">)</span>\n\n<span class=\"n\">In</span> <span class=\"p\">[</span><span class=\"mi\">9</span><span class=\"p\">]:</span> <span class=\"o\">%%</span><span class=\"n\">bash</span>\n   <span class=\"o\">...</span><span class=\"p\">:</span> <span class=\"n\">ncdump</span> <span class=\"o\">-</span><span class=\"n\">h</span> <span class=\"n\">test</span><span class=\"o\">.</span><span class=\"n\">nc</span>\n   <span class=\"o\">...</span><span class=\"p\">:</span>\n   <span class=\"o\">...</span><span class=\"p\">:</span>\n   <span class=\"o\">...</span><span class=\"p\">:</span>\n   <span class=\"o\">...</span><span class=\"p\">:</span>\n<span class=\"n\">netcdf</span> <span class=\"n\">test</span> <span class=\"p\">{</span>\n<span class=\"n\">dimensions</span><span class=\"p\">:</span>\n    <span class=\"n\">time</span> <span class=\"o\">=</span> <span class=\"n\">UNLIMITED</span> <span class=\"p\">;</span> <span class=\"o\">//</span> <span class=\"p\">(</span><span class=\"mi\">1</span> <span class=\"n\">currently</span><span class=\"p\">)</span>\n    <span class=\"n\">lat</span> <span class=\"o\">=</span> <span class=\"mi\">192</span> <span class=\"p\">;</span>\n    <span class=\"n\">lon</span> <span class=\"o\">=</span> <span class=\"mi\">288</span> <span class=\"p\">;</span>\n    <span class=\"n\">chars</span> <span class=\"o\">=</span> <span class=\"mi\">8</span> <span class=\"p\">;</span>\n    <span class=\"n\">ilev</span> <span class=\"o\">=</span> <span class=\"mi\">31</span> <span class=\"p\">;</span>\n    <span class=\"n\">lev</span> <span class=\"o\">=</span> <span class=\"mi\">30</span> <span class=\"p\">;</span>\n    <span class=\"n\">slat</span> <span class=\"o\">=</span> <span class=\"mi\">191</span> <span class=\"p\">;</span>\n    <span class=\"n\">slon</span> <span class=\"o\">=</span> <span class=\"mi\">288</span> <span class=\"p\">;</span>\n    <span class=\"n\">nbnd</span> <span class=\"o\">=</span> <span class=\"mi\">2</span> <span class=\"p\">;</span>\n<span class=\"n\">variables</span><span class=\"p\">:</span>\n    <span class=\"n\">double</span> <span class=\"n\">P0</span> <span class=\"p\">;</span>\n        <span class=\"n\">P0</span><span class=\"p\">:</span><span class=\"n\">_FillValue</span> <span class=\"o\">=</span> <span class=\"n\">NaN</span> <span class=\"p\">;</span>\n        <span class=\"n\">P0</span><span class=\"p\">:</span><span class=\"n\">long_name</span> <span class=\"o\">=</span> <span class=\"s2\">\"reference pressure\"</span> <span class=\"p\">;</span>\n        <span class=\"n\">P0</span><span class=\"p\">:</span><span class=\"n\">units</span> <span class=\"o\">=</span> <span class=\"s2\">\"Pa\"</span> <span class=\"p\">;</span>\n    <span class=\"nb\">float</span> <span class=\"n\">PRECT</span><span class=\"p\">(</span><span class=\"n\">time</span><span class=\"p\">,</span> <span class=\"n\">lat</span><span class=\"p\">,</span> <span class=\"n\">lon</span><span class=\"p\">)</span> <span class=\"p\">;</span>\n<span class=\"o\">...</span>\n    <span class=\"n\">char</span> <span class=\"n\">date_written</span><span class=\"p\">(</span><span class=\"n\">time</span><span class=\"p\">,</span> <span class=\"n\">chars</span><span class=\"p\">)</span> <span class=\"p\">;</span>\n    <span class=\"nb\">int</span> <span class=\"n\">datesec</span><span class=\"p\">(</span><span class=\"n\">time</span><span class=\"p\">)</span> <span class=\"p\">;</span>\n        <span class=\"n\">datesec</span><span class=\"p\">:</span><span class=\"n\">long_name</span> <span class=\"o\">=</span> <span class=\"s2\">\"current seconds of current date\"</span> <span class=\"p\">;</span>\n    <span class=\"n\">double</span> <span class=\"n\">f11vmr</span><span class=\"p\">(</span><span class=\"n\">time</span><span class=\"p\">)</span> <span class=\"p\">;</span>\n        <span class=\"n\">f11vmr</span><span class=\"p\">:</span><span class=\"n\">_FillValue</span> <span class=\"o\">=</span> <span class=\"n\">NaN</span> <span class=\"p\">;</span>\n        <span class=\"n\">f11vmr</span><span class=\"p\">:</span><span class=\"n\">long_name</span> <span class=\"o\">=</span> <span class=\"s2\">\"f11 volume mixing ratio\"</span> <span class=\"p\">;</span>\n</pre></div>",
        "id": 2434,
        "sender_full_name": "Anderson Banihirwe",
        "timestamp": 1583434511
    },
    {
        "content": "<p>Can you elaborate on what operations you are applying on the read dataset that result in you getting:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"o\">(</span>py372<span class=\"o\">)</span> cisl-duluth:prect abaker$ ncdump -h Copy.nc\nnetcdf Copy <span class=\"o\">{</span>\ndimensions:\n<span class=\"nb\">time</span> <span class=\"o\">=</span> UNLIMITED <span class=\"p\">;</span> // <span class=\"o\">(</span><span class=\"m\">1</span> currently<span class=\"o\">)</span>\n<span class=\"nv\">lat</span> <span class=\"o\">=</span> <span class=\"m\">192</span> <span class=\"p\">;</span>\n<span class=\"nv\">lon</span> <span class=\"o\">=</span> <span class=\"m\">288</span> <span class=\"p\">;</span>\n<span class=\"nv\">string8</span> <span class=\"o\">=</span> <span class=\"m\">8</span> <span class=\"p\">;</span>\n<span class=\"nv\">ilev</span> <span class=\"o\">=</span> <span class=\"m\">31</span> <span class=\"p\">;</span>\n<span class=\"nv\">lev</span> <span class=\"o\">=</span> <span class=\"m\">30</span> <span class=\"p\">;</span>\n<span class=\"nv\">slat</span> <span class=\"o\">=</span> <span class=\"m\">191</span> <span class=\"p\">;</span>\n<span class=\"nv\">slon</span> <span class=\"o\">=</span> <span class=\"m\">288</span> <span class=\"p\">;</span>\n<span class=\"nv\">nbnd</span> <span class=\"o\">=</span> <span class=\"m\">2</span> <span class=\"p\">;</span>\n</pre></div>",
        "id": 2435,
        "sender_full_name": "Anderson Banihirwe",
        "timestamp": 1583434634
    },
    {
        "content": "<p>We were not seeing that in our testing.  In fact, the <code>chars</code> dimension was <em>not</em> being saved in the variable <code>encoding</code>.  </p>\n<p><span class=\"user-mention\" data-user-id=\"42\">@Allison Baker</span> What version of Xarray are you using?</p>",
        "id": 2436,
        "sender_full_name": "Kevin Paul",
        "timestamp": 1583434649
    },
    {
        "content": "<p>I should add that I am using </p>\n<div class=\"codehilite\"><pre><span></span><span class=\"n\">In</span> <span class=\"p\">[</span><span class=\"mi\">10</span><span class=\"p\">]:</span> <span class=\"n\">xr</span><span class=\"o\">.</span><span class=\"n\">__version__</span>\n<span class=\"n\">Out</span><span class=\"p\">[</span><span class=\"mi\">10</span><span class=\"p\">]:</span> <span class=\"s1\">&#39;0.15.0&#39;</span>\n</pre></div>",
        "id": 2437,
        "sender_full_name": "Anderson Banihirwe",
        "timestamp": 1583434721
    },
    {
        "content": "<p>I just did the same thing as you and mine turned to string8.  Maybe I have a different version of some package?</p>\n<p>In [1]: import xarray as xr <br>\n   ...: import numpy as np <br>\n   ...: ds = xr.open_dataset(\"orig-data/PRECT.orig.ts10000.nc\")                                                                                  </p>\n<p>In [2]: ds.dims                                                                                                                                  <br>\nOut[2]: Frozen(SortedKeysDict({'time': 1, 'lat': 192, 'lon': 288, 'ilev': 31, 'lev': 30, 'slat': 191, 'slon': 288, 'nbnd': 2}))</p>\n<p>In [3]: ds.date_written                                                                                                                          <br>\nOut[3]: <br>\n&lt;xarray.DataArray 'date_written' (time: 1)&gt;<br>\narray([b'03/02/20'], dtype='|S8')<br>\nCoordinates:</p>\n<p>* time     (time) object 1947-05-26 00:00:00</p>\n<p>In [4]: ds.date_written.encoding                                                                                                                 <br>\nOut[4]: <br>\n{'zlib': True,<br>\n 'shuffle': True,<br>\n 'complevel': 1,<br>\n 'fletcher32': False,<br>\n 'contiguous': False,<br>\n 'chunksizes': (1, 8),<br>\n 'source': '/Users/abaker/alli/compression/statistical/prect/orig-data/PRECT.orig.ts10000.nc',<br>\n 'original_shape': (1, 8),<br>\n 'dtype': dtype('S1')}</p>\n<p>In [5]: ds.to_netcdf(\"<a href=\"http://test.nc\" target=\"_blank\" title=\"http://test.nc\">test.nc</a>\")                                                                                                                  </p>\n<p>In [6]: ds.to_netcdf(\"<a href=\"http://test.nc\" target=\"_blank\" title=\"http://test.nc\">test.nc</a>\")                                                                                                                  </p>\n<p>In [7]: %%bash <br>\n   ...: ncdump -h <a href=\"http://test.nc\" target=\"_blank\" title=\"http://test.nc\">test.nc</a> <br>\n   ...:  <br>\n   ...:                                                                                                                                          <br>\nnetcdf test {<br>\ndimensions:<br>\n    time = UNLIMITED ; // (1 currently)<br>\n    lat = 192 ;<br>\n    lon = 288 ;<br>\n    string8 = 8 ;<br>\n    ilev = 31 ;<br>\n    lev = 30 ;<br>\n    slat = 191 ;<br>\n    slon = 288 ;<br>\n    nbnd = 2 ;</p>",
        "id": 2445,
        "sender_full_name": "Allison Baker",
        "timestamp": 1583440748
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"8\">@Kevin Paul</span> <span class=\"user-mention\" data-user-id=\"13\">@Anderson Banihirwe</span> <br/>\nOK, I have an older version - grrrr <br/>\nxr.__version__                                                                                                                           <br/>\nOut[8]: '0.12.1'</p>\n<p>I will update it and re-try.....</p>",
        "id": 2446,
        "sender_full_name": "Allison Baker",
        "timestamp": 1583440903
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"42\">@Allison Baker</span> Yes.  Update regularly!</p>",
        "id": 2447,
        "sender_full_name": "Kevin Paul",
        "timestamp": 1583440921
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"13\">@Anderson Banihirwe</span> <span class=\"user-mention\" data-user-id=\"8\">@Kevin Paul</span> <br/>\n OK, that fixed it - thank you!</p>",
        "id": 2450,
        "sender_full_name": "Allison Baker",
        "timestamp": 1583443277
    }
]