[
    {
        "content": "<p>I'm struggling to calculate the trend of a variable through time. I have a variable <code>CESMnofert_latavg</code>:<br>\n<a href=\"/user_uploads/2/1a/Yksmas5qlaPqMvl-iEDNR5iV/ScreenShot_CESMnofert_latavg.png\" target=\"_blank\" title=\"ScreenShot_CESMnofert_latavg.png\">ScreenShot_CESMnofert_latavg.png</a> </p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/2/1a/Yksmas5qlaPqMvl-iEDNR5iV/ScreenShot_CESMnofert_latavg.png\" target=\"_blank\" title=\"ScreenShot_CESMnofert_latavg.png\"><img src=\"/user_uploads/2/1a/Yksmas5qlaPqMvl-iEDNR5iV/ScreenShot_CESMnofert_latavg.png\"></a></div><p>The problem seems to be with <code>cftime</code></p>\n<p>I've tried two approaches:</p>\n<div class=\"codehilite\"><pre><span></span>CESMnofert_NBPtrend = stats.linregress(CESMnofert_latavg.time, CESMnofert_latavg)\n\nz = np.polyfit(CESMnofert_latavg.time, CESMnofert_latavg, 1)\n</pre></div>\n\n\n<p>Both result in error messages stating:</p>\n<div class=\"codehilite\"><pre><span></span>TypeError: unsupported operand type(s) for +: &#39;cftime._cftime.DatetimeNoLeap&#39; and &#39;float&#39;\n</pre></div>\n\n\n<p>Is there a way I should change the time dimension? Or is there something else I need to consider? I ultimately want to create a latitudinal plot that shows the temporal trend at each latitude.</p>",
        "id": 36586,
        "sender_full_name": "Danica Lombardozzi",
        "timestamp": 1625681899
    },
    {
        "content": "<p>It looks like you're regressing against the time dimension, which is represented as a <code>cftime._cftime.DatetimeNoLeap</code> object.   If you're happy with treating time steps as integer indexes, you should be able to use time dimension integer indexes, though I'm not sure of the syntax offhand.</p>",
        "id": 36588,
        "sender_full_name": "Brian Bonnlander",
        "timestamp": 1625682848
    },
    {
        "content": "<p>Try <code>Dataset.polyfit</code> or <code>DataArray.polyfit</code> I think it does all these  manipulations for you. The output units are in <code>ns</code> though!</p>",
        "id": 36589,
        "sender_full_name": "Deepak Cherian",
        "timestamp": 1625682995
    },
    {
        "content": "<p>If you're loading the data from NetCDF, you could try adding <code>decode_cf=False</code> to your dataset open statement, and you may have integer indexes instead of time objects.</p>",
        "id": 36590,
        "sender_full_name": "Brian Bonnlander",
        "timestamp": 1625683001
    },
    {
        "content": "<p>Thanks! I was able to get something to work using <code>DataArray.polyfit</code>. <span class=\"user-mention\" data-user-id=\"25\">@Deepak Cherian</span> , what do you mean by units in <code>ns</code>?</p>\n<p>I'm not sure I fully understand this function so I'll keep playing around with it. I found the docs page for it, but can't seem to find examples of it in use.</p>",
        "id": 36628,
        "sender_full_name": "Danica Lombardozzi",
        "timestamp": 1625687905
    },
    {
        "content": "<p>See <a href=\"https://github.com/pydata/xarray/issues/4455\" target=\"_blank\" title=\"https://github.com/pydata/xarray/issues/4455\">https://github.com/pydata/xarray/issues/4455</a> the output values are sometimes confusing. I guess I should have written <code>(data units)/nanosecond</code> I am not sure what happens with cftime though.</p>",
        "id": 36637,
        "sender_full_name": "Deepak Cherian",
        "timestamp": 1625689652
    },
    {
        "content": "<p>Thanks Deepak. The units do seem to be in nanoseconds with cftime as well. I initially asked because the values plotted as 1e-18, so I'm glad to know it's not a mistake on my part.</p>",
        "id": 36651,
        "sender_full_name": "Danica Lombardozzi",
        "timestamp": 1625692537
    },
    {
        "content": "<p>I went through this same process a few weeks back! <span class=\"user-mention\" data-user-id=\"74\">@Danica Lombardozzi</span>  If you're looking for an example with <code>xr.polyfit</code> I have one here: <a href=\"https://github.com/katiedagon/GLENS-Ecosystems/blob/main/notebooks/climateVelocity.ipynb\" target=\"_blank\" title=\"https://github.com/katiedagon/GLENS-Ecosystems/blob/main/notebooks/climateVelocity.ipynb\">https://github.com/katiedagon/GLENS-Ecosystems/blob/main/notebooks/climateVelocity.ipynb</a> (sorry the notebook is kind of long and messy, just search for \"polyfit\" to find relevant code)</p>",
        "id": 36652,
        "sender_full_name": "Katie Dagon",
        "timestamp": 1625693209
    },
    {
        "content": "<p>Thanks <span class=\"user-mention\" data-user-id=\"47\">@Katie Dagon</span> ! It's really nice to have an example of this in action!</p>",
        "id": 36653,
        "sender_full_name": "Danica Lombardozzi",
        "timestamp": 1625693263
    }
]