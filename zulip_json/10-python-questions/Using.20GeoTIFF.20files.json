[
    {
        "content": "<p>Does anyone have experience using GeoTIFF files for model evaluation? I received some satellite-derived GPP data in .tif format (/glade/work/dll/SIF_GPP/data.globalecology.unh.edu/data/GOSIF-GPP_v2/Monthly/Mean/) and would like to ultimately compare to CLM GPP. </p>\n<p>There is some information online about working with GeoTIFF files (<a href=\"https://towardsdatascience.com/reading-and-visualizing-geotiff-images-with-python-8dcca7a74510\" target=\"_blank\" title=\"https://towardsdatascience.com/reading-and-visualizing-geotiff-images-with-python-8dcca7a74510\">https://towardsdatascience.com/reading-and-visualizing-geotiff-images-with-python-8dcca7a74510</a>), but I'm having trouble getting started. I don't know how to update or change environments on casper to be able to add the <code>georaster</code> or <code>osgeo</code> modules so that I can read in the data. From there, it's not clear to me how I will be able to manipulate the data for comparison against CLM. Any thoughts or advice for reading in and manipulating data in GeoTIFF format are very much appreciated!</p>",
        "id": 20356,
        "sender_full_name": "Danica Lombardozzi",
        "timestamp": 1603730927
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"74\">@Danica Lombardozzi</span>, </p>\n<p>If you haven't done so already, give xarray + rasterio a try </p>\n<div class=\"codehilite\"><pre><span></span><span class=\"n\">In</span> <span class=\"p\">[</span><span class=\"mi\">9</span><span class=\"p\">]:</span> <span class=\"kn\">import</span> <span class=\"nn\">xarray</span> <span class=\"k\">as</span> <span class=\"nn\">xr</span>\n\n<span class=\"n\">In</span> <span class=\"p\">[</span><span class=\"mi\">10</span><span class=\"p\">]:</span> <span class=\"n\">da</span> <span class=\"o\">=</span> <span class=\"n\">xr</span><span class=\"o\">.</span><span class=\"n\">open_rasterio</span><span class=\"p\">(</span><span class=\"s1\">&#39;/glade/work/dll/SIF_GPP/data.globalecology.unh.edu/data/GOSIF-GPP_v2/Monthly/Mean/GOSIF_GPP_2000.M0</span>\n    <span class=\"o\">...</span><span class=\"p\">:</span> <span class=\"mi\">3</span><span class=\"n\">_Mean</span><span class=\"o\">.</span><span class=\"n\">tif</span><span class=\"s1\">&#39;)</span>\n\n<span class=\"n\">In</span> <span class=\"p\">[</span><span class=\"mi\">11</span><span class=\"p\">]:</span> <span class=\"n\">da</span>\n<span class=\"n\">Out</span><span class=\"p\">[</span><span class=\"mi\">11</span><span class=\"p\">]:</span>\n<span class=\"o\">&lt;</span><span class=\"n\">xarray</span><span class=\"o\">.</span><span class=\"n\">DataArray</span> <span class=\"p\">(</span><span class=\"n\">band</span><span class=\"p\">:</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"n\">y</span><span class=\"p\">:</span> <span class=\"mi\">3600</span><span class=\"p\">,</span> <span class=\"n\">x</span><span class=\"p\">:</span> <span class=\"mi\">7200</span><span class=\"p\">)</span><span class=\"o\">&gt;</span>\n<span class=\"p\">[</span><span class=\"mi\">25920000</span> <span class=\"n\">values</span> <span class=\"k\">with</span> <span class=\"n\">dtype</span><span class=\"o\">=</span><span class=\"n\">uint16</span><span class=\"p\">]</span>\n<span class=\"n\">Coordinates</span><span class=\"p\">:</span>\n  <span class=\"o\">*</span> <span class=\"n\">band</span>     <span class=\"p\">(</span><span class=\"n\">band</span><span class=\"p\">)</span> <span class=\"n\">int64</span> <span class=\"mi\">1</span>\n  <span class=\"o\">*</span> <span class=\"n\">y</span>        <span class=\"p\">(</span><span class=\"n\">y</span><span class=\"p\">)</span> <span class=\"n\">float64</span> <span class=\"mf\">89.97</span> <span class=\"mf\">89.92</span> <span class=\"mf\">89.88</span> <span class=\"mf\">89.83</span> <span class=\"o\">...</span> <span class=\"o\">-</span><span class=\"mf\">89.83</span> <span class=\"o\">-</span><span class=\"mf\">89.88</span> <span class=\"o\">-</span><span class=\"mf\">89.93</span> <span class=\"o\">-</span><span class=\"mf\">89.98</span>\n  <span class=\"o\">*</span> <span class=\"n\">x</span>        <span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">)</span> <span class=\"n\">float64</span> <span class=\"o\">-</span><span class=\"mf\">180.0</span> <span class=\"o\">-</span><span class=\"mf\">179.9</span> <span class=\"o\">-</span><span class=\"mf\">179.9</span> <span class=\"o\">-</span><span class=\"mf\">179.8</span> <span class=\"o\">...</span> <span class=\"mf\">179.8</span> <span class=\"mf\">179.9</span> <span class=\"mf\">179.9</span> <span class=\"mf\">180.0</span>\n<span class=\"n\">Attributes</span><span class=\"p\">:</span>\n    <span class=\"n\">transform</span><span class=\"p\">:</span>         <span class=\"p\">(</span><span class=\"mf\">0.05</span><span class=\"p\">,</span> <span class=\"mf\">0.0</span><span class=\"p\">,</span> <span class=\"o\">-</span><span class=\"mf\">180.0</span><span class=\"p\">,</span> <span class=\"mf\">0.0</span><span class=\"p\">,</span> <span class=\"o\">-</span><span class=\"mf\">0.05</span><span class=\"p\">,</span> <span class=\"mf\">90.0</span><span class=\"p\">)</span>\n    <span class=\"n\">crs</span><span class=\"p\">:</span>               <span class=\"o\">+</span><span class=\"n\">init</span><span class=\"o\">=</span><span class=\"n\">epsg</span><span class=\"p\">:</span><span class=\"mi\">4326</span>\n    <span class=\"n\">res</span><span class=\"p\">:</span>               <span class=\"p\">(</span><span class=\"mf\">0.05</span><span class=\"p\">,</span> <span class=\"mf\">0.05</span><span class=\"p\">)</span>\n    <span class=\"n\">is_tiled</span><span class=\"p\">:</span>          <span class=\"mi\">1</span>\n    <span class=\"n\">nodatavals</span><span class=\"p\">:</span>        <span class=\"p\">(</span><span class=\"n\">nan</span><span class=\"p\">,)</span>\n    <span class=\"n\">scales</span><span class=\"p\">:</span>            <span class=\"p\">(</span><span class=\"mf\">1.0</span><span class=\"p\">,)</span>\n    <span class=\"n\">offsets</span><span class=\"p\">:</span>           <span class=\"p\">(</span><span class=\"mf\">0.0</span><span class=\"p\">,)</span>\n    <span class=\"n\">AREA_OR_POINT</span><span class=\"p\">:</span>     <span class=\"n\">Area</span>\n    <span class=\"n\">TIFFTAG_SOFTWARE</span><span class=\"p\">:</span>  <span class=\"n\">MATLAB</span> <span class=\"mf\">8.6</span><span class=\"p\">,</span> <span class=\"n\">Mapping</span> <span class=\"n\">Toolbox</span> <span class=\"mf\">4.2</span>\n</pre></div>\n\n\n<p>For this to work, you need to have <code>rasterio</code> which is available via conda</p>\n<div class=\"codehilite\"><pre><span></span>conda install -c conda-forge rasterio\n</pre></div>",
        "id": 20357,
        "sender_full_name": "Anderson Banihirwe",
        "timestamp": 1603731674
    },
    {
        "content": "<blockquote>\n<p>I don't know how to update or change environments on casper to be able to add the georaster or osgeo modules so that I can read in the data</p>\n</blockquote>\n<p>Do you own the environment you are using or is this one of the public/\"official\" environments?</p>",
        "id": 20358,
        "sender_full_name": "Anderson Banihirwe",
        "timestamp": 1603732312
    },
    {
        "content": "<p>rioxarray may also be helpful (<a href=\"https://corteva.github.io/rioxarray/stable/index.html\" target=\"_blank\" title=\"https://corteva.github.io/rioxarray/stable/index.html\">https://corteva.github.io/rioxarray/stable/index.html</a>)</p>",
        "id": 20359,
        "sender_full_name": "Deepak Cherian",
        "timestamp": 1603732581
    },
    {
        "content": "<p>Thank you Anderson and Deepak! I was able to read in the file. Now I just have to figure out how to use it. <br>\n@Anderson Banihirwe: I don't know whether I own the environment or not. Is there an easy way to check? I'm using conda env: miniconda-analysis. I participated in several different tutorials that set up environments before I really knew what this meant. I'd ultimately like to clean up the environment space and gain a better understanding of how to set up and manage my own environments.</p>",
        "id": 20360,
        "sender_full_name": "Danica Lombardozzi",
        "timestamp": 1603733366
    },
    {
        "content": "<blockquote>\n<p>I don't know whether I own the environment or not. Is there an easy way to check? </p>\n</blockquote>\n<p>Inside a notebook, try the following</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"n\">In</span> <span class=\"p\">[</span><span class=\"mi\">21</span><span class=\"p\">]:</span> <span class=\"kn\">import</span> <span class=\"nn\">sys</span>\n\n<span class=\"n\">In</span> <span class=\"p\">[</span><span class=\"mi\">22</span><span class=\"p\">]:</span> <span class=\"n\">sys</span><span class=\"o\">.</span><span class=\"n\">executable</span>\n<span class=\"n\">Out</span><span class=\"p\">[</span><span class=\"mi\">22</span><span class=\"p\">]:</span> <span class=\"s1\">&#39;/glade/work/abanihi/softwares/miniconda3/envs/playground/bin/python&#39;</span>\n</pre></div>\n\n\n<p>This will tell you where the Python executable is coming from</p>",
        "id": 20368,
        "sender_full_name": "Anderson Banihirwe",
        "timestamp": 1603733936
    },
    {
        "content": "<p>^ nice! should go in the xdev FAQ.</p>",
        "id": 20374,
        "sender_full_name": "Deepak Cherian",
        "timestamp": 1603733986
    },
    {
        "content": "<blockquote>\n<p>. I'd ultimately like to clean up the environment space and gain a better understanding of how to set up and manage my own environments.</p>\n</blockquote>\n<p><span aria-label=\"+1\" class=\"emoji emoji-1f44d\" role=\"img\" title=\"+1\">:+1:</span> When you get a chance, there's a great resource residing here: <a href=\"https://carpentries-incubator.github.io/introduction-to-conda-for-data-scientists/\" target=\"_blank\" title=\"https://carpentries-incubator.github.io/introduction-to-conda-for-data-scientists/\">https://carpentries-incubator.github.io/introduction-to-conda-for-data-scientists/</a></p>\n<p>If you are more of a visual learner, there's a video tutorial too: <a href=\"https://youtu.be/qn5zfdJtcYc\" target=\"_blank\" title=\"https://youtu.be/qn5zfdJtcYc\">https://youtu.be/qn5zfdJtcYc</a></p>\n<p>Most of the things covered in these tutorials are cross-platform i.e. they work the same regardless of the machine you are using... There is a few exceptions/caveats when working with conda on Cheyenne/Casper. <span class=\"user-group-mention\" data-user-group-id=\"4\">@xdev</span> folks will be happy to answer any question you may have....</p>\n<div class=\"youtube-video message_inline_image\"><a data-id=\"qn5zfdJtcYc\" href=\"https://youtu.be/qn5zfdJtcYc\" target=\"_blank\" title=\"https://youtu.be/qn5zfdJtcYc\"><img src=\"https://i.ytimg.com/vi/qn5zfdJtcYc/default.jpg\"></a></div>",
        "id": 20380,
        "sender_full_name": "Anderson Banihirwe",
        "timestamp": 1603735252
    },
    {
        "content": "<p>Thanks for sharing these resources! I will take a look and try to improve my environment. It looks like the environment I'm using is my personal environment, so hopefully I should be able to set that up properly.</p>",
        "id": 20469,
        "sender_full_name": "Danica Lombardozzi",
        "timestamp": 1603750912
    },
    {
        "content": "<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"74\">Danica Lombardozzi</span>, </p>\n<p>If you haven't done so already, give xarray + rasterio a try </p>\n<div class=\"codehilite\"><pre><span></span><span class=\"n\">In</span> <span class=\"p\">[</span><span class=\"mi\">9</span><span class=\"p\">]:</span> <span class=\"kn\">import</span> <span class=\"nn\">xarray</span> <span class=\"k\">as</span> <span class=\"nn\">xr</span>\n\n<span class=\"n\">In</span> <span class=\"p\">[</span><span class=\"mi\">10</span><span class=\"p\">]:</span> <span class=\"n\">da</span> <span class=\"o\">=</span> <span class=\"n\">xr</span><span class=\"o\">.</span><span class=\"n\">open_rasterio</span><span class=\"p\">(</span><span class=\"s1\">&#39;/glade/work/dll/SIF_GPP/data.globalecology.unh.edu/data/GOSIF-GPP_v2/Monthly/Mean/GOSIF_GPP_2000.M0</span>\n    <span class=\"o\">...</span><span class=\"p\">:</span> <span class=\"mi\">3</span><span class=\"n\">_Mean</span><span class=\"o\">.</span><span class=\"n\">tif</span><span class=\"s1\">&#39;)</span>\n\n<span class=\"n\">In</span> <span class=\"p\">[</span><span class=\"mi\">11</span><span class=\"p\">]:</span> <span class=\"n\">da</span>\n<span class=\"n\">Out</span><span class=\"p\">[</span><span class=\"mi\">11</span><span class=\"p\">]:</span>\n<span class=\"o\">&lt;</span><span class=\"n\">xarray</span><span class=\"o\">.</span><span class=\"n\">DataArray</span> <span class=\"p\">(</span><span class=\"n\">band</span><span class=\"p\">:</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"n\">y</span><span class=\"p\">:</span> <span class=\"mi\">3600</span><span class=\"p\">,</span> <span class=\"n\">x</span><span class=\"p\">:</span> <span class=\"mi\">7200</span><span class=\"p\">)</span><span class=\"o\">&gt;</span>\n<span class=\"p\">[</span><span class=\"mi\">25920000</span> <span class=\"n\">values</span> <span class=\"k\">with</span> <span class=\"n\">dtype</span><span class=\"o\">=</span><span class=\"n\">uint16</span><span class=\"p\">]</span>\n<span class=\"n\">Coordinates</span><span class=\"p\">:</span>\n  <span class=\"o\">*</span> <span class=\"n\">band</span>     <span class=\"p\">(</span><span class=\"n\">band</span><span class=\"p\">)</span> <span class=\"n\">int64</span> <span class=\"mi\">1</span>\n  <span class=\"o\">*</span> <span class=\"n\">y</span>        <span class=\"p\">(</span><span class=\"n\">y</span><span class=\"p\">)</span> <span class=\"n\">float64</span> <span class=\"mf\">89.97</span> <span class=\"mf\">89.92</span> <span class=\"mf\">89.88</span> <span class=\"mf\">89.83</span> <span class=\"o\">...</span> <span class=\"o\">-</span><span class=\"mf\">89.83</span> <span class=\"o\">-</span><span class=\"mf\">89.88</span> <span class=\"o\">-</span><span class=\"mf\">89.93</span> <span class=\"o\">-</span><span class=\"mf\">89.98</span>\n  <span class=\"o\">*</span> <span class=\"n\">x</span>        <span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">)</span> <span class=\"n\">float64</span> <span class=\"o\">-</span><span class=\"mf\">180.0</span> <span class=\"o\">-</span><span class=\"mf\">179.9</span> <span class=\"o\">-</span><span class=\"mf\">179.9</span> <span class=\"o\">-</span><span class=\"mf\">179.8</span> <span class=\"o\">...</span> <span class=\"mf\">179.8</span> <span class=\"mf\">179.9</span> <span class=\"mf\">179.9</span> <span class=\"mf\">180.0</span>\n<span class=\"n\">Attributes</span><span class=\"p\">:</span>\n    <span class=\"n\">transform</span><span class=\"p\">:</span>         <span class=\"p\">(</span><span class=\"mf\">0.05</span><span class=\"p\">,</span> <span class=\"mf\">0.0</span><span class=\"p\">,</span> <span class=\"o\">-</span><span class=\"mf\">180.0</span><span class=\"p\">,</span> <span class=\"mf\">0.0</span><span class=\"p\">,</span> <span class=\"o\">-</span><span class=\"mf\">0.05</span><span class=\"p\">,</span> <span class=\"mf\">90.0</span><span class=\"p\">)</span>\n    <span class=\"n\">crs</span><span class=\"p\">:</span>               <span class=\"o\">+</span><span class=\"n\">init</span><span class=\"o\">=</span><span class=\"n\">epsg</span><span class=\"p\">:</span><span class=\"mi\">4326</span>\n    <span class=\"n\">res</span><span class=\"p\">:</span>               <span class=\"p\">(</span><span class=\"mf\">0.05</span><span class=\"p\">,</span> <span class=\"mf\">0.05</span><span class=\"p\">)</span>\n    <span class=\"n\">is_tiled</span><span class=\"p\">:</span>          <span class=\"mi\">1</span>\n    <span class=\"n\">nodatavals</span><span class=\"p\">:</span>        <span class=\"p\">(</span><span class=\"n\">nan</span><span class=\"p\">,)</span>\n    <span class=\"n\">scales</span><span class=\"p\">:</span>            <span class=\"p\">(</span><span class=\"mf\">1.0</span><span class=\"p\">,)</span>\n    <span class=\"n\">offsets</span><span class=\"p\">:</span>           <span class=\"p\">(</span><span class=\"mf\">0.0</span><span class=\"p\">,)</span>\n    <span class=\"n\">AREA_OR_POINT</span><span class=\"p\">:</span>     <span class=\"n\">Area</span>\n    <span class=\"n\">TIFFTAG_SOFTWARE</span><span class=\"p\">:</span>  <span class=\"n\">MATLAB</span> <span class=\"mf\">8.6</span><span class=\"p\">,</span> <span class=\"n\">Mapping</span> <span class=\"n\">Toolbox</span> <span class=\"mf\">4.2</span>\n</pre></div>\n\n\n<p>For this to work, you need to have <code>rasterio</code> which is available via conda</p>\n<div class=\"codehilite\"><pre><span></span>conda install -c conda-forge rasterio\n</pre></div>\n\n\n</blockquote>\n<p>Anderson: In working with the data (the same as above), it looks to me as if there aren't any data in the file. Am I missing something? I also tried to make a plot, but the plot is blank. I'm wondering if loading the file this way somehow strips the data or if there is something else I may be doing incorrectly. I've  been working on regridding to a coarser resolution, but that will be pointless if there aren't useable data. Thanks!</p>",
        "id": 20479,
        "sender_full_name": "Danica Lombardozzi",
        "timestamp": 1603756753
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"74\">@Danica Lombardozzi</span> , that's strange... </p>\n<blockquote>\n<p>it looks to me as if there aren't any data in the file.</p>\n</blockquote>\n<p>I think the data is there because when I compute some metrics such as mean, min, etc... I get values</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"n\">In</span> <span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">]:</span> <span class=\"kn\">import</span> <span class=\"nn\">xarray</span> <span class=\"k\">as</span> <span class=\"nn\">xr</span>\n\n<span class=\"n\">In</span> <span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">]:</span> <span class=\"n\">da</span> <span class=\"o\">=</span> <span class=\"n\">xr</span><span class=\"o\">.</span><span class=\"n\">open_rasterio</span><span class=\"p\">(</span><span class=\"s1\">&#39;/glade/work/dll/SIF_GPP/data.globalecology.unh.edu/data/GOSIF-GPP_v2/Monthly/Mean/GOSIF_GP</span>\n   <span class=\"o\">...</span><span class=\"p\">:</span> <span class=\"n\">P_2000</span><span class=\"o\">.</span><span class=\"n\">M03_Mean</span><span class=\"o\">.</span><span class=\"n\">tif</span><span class=\"s1\">&#39;)</span>\n\n<span class=\"n\">In</span> <span class=\"p\">[</span><span class=\"mi\">3</span><span class=\"p\">]:</span> <span class=\"n\">da</span><span class=\"o\">.</span><span class=\"n\">mean</span><span class=\"p\">(),</span> <span class=\"n\">da</span><span class=\"o\">.</span><span class=\"n\">min</span><span class=\"p\">(),</span> <span class=\"n\">da</span><span class=\"o\">.</span><span class=\"n\">max</span><span class=\"p\">(),</span> <span class=\"n\">da</span><span class=\"o\">.</span><span class=\"n\">std</span><span class=\"p\">()</span>\n<span class=\"n\">Out</span><span class=\"p\">[</span><span class=\"mi\">3</span><span class=\"p\">]:</span>\n<span class=\"p\">(</span><span class=\"o\">&lt;</span><span class=\"n\">xarray</span><span class=\"o\">.</span><span class=\"n\">DataArray</span> <span class=\"p\">()</span><span class=\"o\">&gt;</span>\n <span class=\"n\">array</span><span class=\"p\">(</span><span class=\"mf\">52212.33478943</span><span class=\"p\">),</span>\n <span class=\"o\">&lt;</span><span class=\"n\">xarray</span><span class=\"o\">.</span><span class=\"n\">DataArray</span> <span class=\"p\">()</span><span class=\"o\">&gt;</span>\n <span class=\"n\">array</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"n\">dtype</span><span class=\"o\">=</span><span class=\"n\">uint16</span><span class=\"p\">),</span>\n <span class=\"o\">&lt;</span><span class=\"n\">xarray</span><span class=\"o\">.</span><span class=\"n\">DataArray</span> <span class=\"p\">()</span><span class=\"o\">&gt;</span>\n <span class=\"n\">array</span><span class=\"p\">(</span><span class=\"mi\">65535</span><span class=\"p\">,</span> <span class=\"n\">dtype</span><span class=\"o\">=</span><span class=\"n\">uint16</span><span class=\"p\">),</span>\n <span class=\"o\">&lt;</span><span class=\"n\">xarray</span><span class=\"o\">.</span><span class=\"n\">DataArray</span> <span class=\"p\">()</span><span class=\"o\">&gt;</span>\n <span class=\"n\">array</span><span class=\"p\">(</span><span class=\"mf\">25213.59032424</span><span class=\"p\">))</span>\n</pre></div>\n\n\n<p>I will look into the plotting issue and will get back to you</p>",
        "id": 20527,
        "sender_full_name": "Anderson Banihirwe",
        "timestamp": 1603830833
    },
    {
        "content": "<p>I think I figured out how to get an image/plot from the data. </p>\n<p>Using <code>da.squeeze().plot.imshow()</code> --which displays data as an image, i.e., on a 2D regular raster-- works perfectly fine:</p>\n<p><a href=\"/user_uploads/2/b/moC-Vj1gmsuaBGCL4eiFRBmA/Screen-Shot-2020-10-27-at-2.39.59-PM.png\" target=\"_blank\" title=\"Screen-Shot-2020-10-27-at-2.39.59-PM.png\">Screen-Shot-2020-10-27-at-2.39.59-PM.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/2/b/moC-Vj1gmsuaBGCL4eiFRBmA/Screen-Shot-2020-10-27-at-2.39.59-PM.png\" target=\"_blank\" title=\"Screen-Shot-2020-10-27-at-2.39.59-PM.png\"><img src=\"/user_uploads/2/b/moC-Vj1gmsuaBGCL4eiFRBmA/Screen-Shot-2020-10-27-at-2.39.59-PM.png\"></a></div><p>I don't know why the colormesh plot is blank though (Ccing <span class=\"user-mention\" data-user-id=\"25\">@Deepak Cherian</span>  who knows more than me. There's a chance he might have a clue about what's going on  <span aria-label=\"slight smile\" class=\"emoji emoji-1f642\" role=\"img\" title=\"slight smile\">:slight_smile:</span>) </p>\n<p><a href=\"/user_uploads/2/e0/r2KmOEJr45uTbNRiVPAy2j4Y/Screen-Shot-2020-10-27-at-2.52.48-PM.png\" target=\"_blank\" title=\"Screen-Shot-2020-10-27-at-2.52.48-PM.png\">Screen-Shot-2020-10-27-at-2.52.48-PM.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/2/e0/r2KmOEJr45uTbNRiVPAy2j4Y/Screen-Shot-2020-10-27-at-2.52.48-PM.png\" target=\"_blank\" title=\"Screen-Shot-2020-10-27-at-2.52.48-PM.png\"><img src=\"/user_uploads/2/e0/r2KmOEJr45uTbNRiVPAy2j4Y/Screen-Shot-2020-10-27-at-2.52.48-PM.png\"></a></div>",
        "id": 20528,
        "sender_full_name": "Anderson Banihirwe",
        "timestamp": 1603832266
    },
    {
        "content": "<p>Thanks Anderson! I was able to get that to work, and I'm glad to know that the data are there. I was wondering if you can help with another problem related to these data. The data are on a very high resolution grid (0.05-degree), and I would like to make direct comparisons to CESM simulations. I've been using the xesmf tool to regrid, but it hangs for 10 minutes or more before I give up. I'm currently testing the code for only a single file and I have many more that I hope to regrid (and save). Is there an easy way to make this more efficient that what I'm currently doing? This assumes that I'm doing the regridding correctly in the first place, which I've not yet verified. </p>\n<div class=\"codehilite\"><pre><span></span>#Data\nsifdat = xr.open_rasterio(sifdir + &quot;GOSIF_GPP_2001.M01_Mean.tif&quot;)\nsifdat = sifdat.rename({&#39;x&#39;:&#39;lat&#39;})\nsifdat = sifdat.rename({&#39;y&#39;:&#39;lon&#39;})\n#&lt;xarray.DataArray (lat: 3600, lon: 7200)&gt;\n\n#Regrid\nsif_coarse = xr.Dataset({&#39;lat&#39;: ([&#39;lat&#39;], np.arange(-90,90,0.94)),\n                         &#39;lon&#39;: ([&#39;lon&#39;], np.arange(0,360,1.25)),\n                        }\n                       )\nsif_coarse\n#&lt;xarray.Dataset: Dimensions:  (lat: 192, lon: 288)&gt;\n\n# Next line very slow, never successfully completed\nregridder = xe.Regridder(sifdat, sif_coarse, &#39;bilinear&#39;)\nsif_out = regridder(sif_coarse)\n</pre></div>",
        "id": 20530,
        "sender_full_name": "Danica Lombardozzi",
        "timestamp": 1603837455
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"74\">@Danica Lombardozzi</span>, that problem may be too big for xesmf, which calls the serial version of the ESMF to generate weights.</p>\n<p>Here's a script that invokes a parallel version of <code>ESMF_RegridWeightGen</code><br>\n<a href=\"https://github.com/marbl-ecosys/marbl-forcing/blob/master/Fe_sediment_flux/esmf_gen_weights.pbs\" target=\"_blank\" title=\"https://github.com/marbl-ecosys/marbl-forcing/blob/master/Fe_sediment_flux/esmf_gen_weights.pbs\">https://github.com/marbl-ecosys/marbl-forcing/blob/master/Fe_sediment_flux/esmf_gen_weights.pbs</a></p>\n<p>In order to use this, you will need SCRIP format grid files for the <code>SRC</code> and <code>DST</code> grids. </p>\n<p>Here's a function that creates a SCRIP grid file for regular lat/lon grids<br>\n<a href=\"https://github.com/matt-long/krill-cesm-le/blob/75d749197e2754f3bd6c2a714866816b56822d3a/notebooks/util.py#L292\" target=\"_blank\" title=\"https://github.com/matt-long/krill-cesm-le/blob/75d749197e2754f3bd6c2a714866816b56822d3a/notebooks/util.py#L292\">https://github.com/matt-long/krill-cesm-le/blob/75d749197e2754f3bd6c2a714866816b56822d3a/notebooks/util.py#L292</a></p>\n<p>More complicated grids are...more complicated. <a href=\"https://github.com/NCAR/pop-tools/blob/ca3c67c69473ba336e59db5931415bbb92b93fcf/pop_tools/grid.py#L45\" target=\"_blank\" title=\"https://github.com/NCAR/pop-tools/blob/ca3c67c69473ba336e59db5931415bbb92b93fcf/pop_tools/grid.py#L45\">pop_tools.get_grid</a> can return a SCRIP grid.</p>\n<p>Once you have the weight files, you can likely use xESMF to apply them. </p>\n<p>I have code to do this too that is based on xESMF, but provides some other features.<br>\n<a href=\"https://github.com/matt-long/krill-cesm-le/blob/75d749197e2754f3bd6c2a714866816b56822d3a/notebooks/util.py#L499\" target=\"_blank\" title=\"https://github.com/matt-long/krill-cesm-le/blob/75d749197e2754f3bd6c2a714866816b56822d3a/notebooks/util.py#L499\">https://github.com/matt-long/krill-cesm-le/blob/75d749197e2754f3bd6c2a714866816b56822d3a/notebooks/util.py#L499</a></p>\n<p>Would be great to get the <span class=\"user-group-mention\" data-user-group-id=\"1\">@geocat</span> team involved here; we are really lacking a clean, comprehensive solution to regridding.</p>",
        "id": 20531,
        "sender_full_name": "Matt Long",
        "timestamp": 1603838582
    },
    {
        "content": "<p>Consider us informed, I'll start reading and see if our current or planned regridding tools would help in this case.</p>",
        "id": 20532,
        "sender_full_name": "Austin Kootz",
        "timestamp": 1603838688
    },
    {
        "content": "<p>Thanks Matt! I'll see if I can get something working based on the scripts you point me to.</p>",
        "id": 20547,
        "sender_full_name": "Danica Lombardozzi",
        "timestamp": 1603896067
    },
    {
        "content": "<p>Another question related to GeoTIFF files: Is there a way to read in multiple files? I've been using <code>open_rasterio</code>, but can only seem to open a single file at a time. I have &gt;200 monthly files that I'd like to open as a data array, so I think I'm looking for the equivalent of <code>open_mfdataset</code> for GeoTiff files in xarray. Thanks!</p>",
        "id": 21676,
        "sender_full_name": "Danica Lombardozzi",
        "timestamp": 1605656574
    },
    {
        "content": "<p>It's my understanding that  currently <code>xarray.open_mfdataset()</code> works for <code>netCDF</code> and <code>HDF</code> files only (this may change in the future). </p>\n<p>So, to read in multiple GeoTiff files, you may want to try something along these lines:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"n\">list_of_files</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s1\">&#39;file1.tif&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;file2.tif&#39;</span><span class=\"p\">]</span>\n<span class=\"n\">dsets</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n<span class=\"c1\"># Loop over the list of files, reading each one in its own dataarray</span>\n<span class=\"k\">for</span> <span class=\"n\">file</span> <span class=\"ow\">in</span> <span class=\"n\">list_of_files</span><span class=\"p\">:</span>\n  <span class=\"n\">da</span> <span class=\"o\">=</span> <span class=\"n\">xr</span><span class=\"o\">.</span><span class=\"n\">open_rasterio</span><span class=\"p\">(</span><span class=\"n\">file</span><span class=\"p\">,</span> <span class=\"o\">.....</span><span class=\"p\">)</span>\n  <span class=\"n\">dsets</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">da</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># concatenate/merge the list of read files into a single datarray/dataset</span>\n<span class=\"n\">ds</span> <span class=\"o\">=</span> <span class=\"n\">xr</span><span class=\"o\">.</span><span class=\"n\">combine_by_coords</span><span class=\"p\">(</span><span class=\"n\">dsets</span><span class=\"p\">)</span>\n</pre></div>",
        "id": 21694,
        "sender_full_name": "Anderson Banihirwe",
        "timestamp": 1605657332
    },
    {
        "content": "<p><span aria-label=\"warning\" class=\"emoji emoji-26a0\" role=\"img\" title=\"warning\">:warning:</span> <span aria-label=\"warning\" class=\"emoji emoji-26a0\" role=\"img\" title=\"warning\">:warning:</span>  It turns out that the code snippet above has a bug in it <span aria-label=\"slight smile\" class=\"emoji emoji-1f642\" role=\"img\" title=\"slight smile\">:slight_smile:</span>...</p>",
        "id": 21703,
        "sender_full_name": "Anderson Banihirwe",
        "timestamp": 1605657669
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"74\">@Danica Lombardozzi</span>, is this what you are looking for?</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"n\">In</span> <span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">]:</span> <span class=\"kn\">import</span> <span class=\"nn\">xarray</span> <span class=\"k\">as</span> <span class=\"nn\">xr</span>\n\n<span class=\"n\">In</span> <span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">]:</span> <span class=\"kn\">import</span> <span class=\"nn\">pathlib</span>\n\n<span class=\"n\">In</span> <span class=\"p\">[</span><span class=\"mi\">3</span><span class=\"p\">]:</span> <span class=\"n\">root_path</span> <span class=\"o\">=</span> <span class=\"n\">pathlib</span><span class=\"o\">.</span><span class=\"n\">Path</span><span class=\"p\">(</span><span class=\"s1\">&#39;/glade/work/dll/SIF_GPP/data.globalecology.unh.edu/data/GOSIF-GPP_v2/Monthly/Mean/&#39;</span><span class=\"p\">)</span>\n\n<span class=\"n\">In</span> <span class=\"p\">[</span><span class=\"mi\">4</span><span class=\"p\">]:</span> <span class=\"n\">files</span> <span class=\"o\">=</span> <span class=\"nb\">sorted</span><span class=\"p\">(</span><span class=\"n\">root_path</span><span class=\"o\">.</span><span class=\"n\">rglob</span><span class=\"p\">(</span><span class=\"s2\">&quot;*.tif&quot;</span><span class=\"p\">))</span>\n\n<span class=\"n\">In</span> <span class=\"p\">[</span><span class=\"mi\">5</span><span class=\"p\">]:</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">files</span><span class=\"p\">)</span>\n<span class=\"n\">Out</span><span class=\"p\">[</span><span class=\"mi\">5</span><span class=\"p\">]:</span> <span class=\"mi\">226</span>\n\n<span class=\"n\">In</span> <span class=\"p\">[</span><span class=\"mi\">6</span><span class=\"p\">]:</span> <span class=\"n\">files</span><span class=\"p\">[:</span><span class=\"mi\">4</span><span class=\"p\">]</span>\n<span class=\"n\">Out</span><span class=\"p\">[</span><span class=\"mi\">6</span><span class=\"p\">]:</span>\n<span class=\"p\">[</span><span class=\"n\">PosixPath</span><span class=\"p\">(</span><span class=\"s1\">&#39;/glade/work/dll/SIF_GPP/data.globalecology.unh.edu/data/GOSIF-GPP_v2/Monthly/Mean/GOSIF_GPP_2000.M03_Mean.tif&#39;</span><span class=\"p\">),</span>\n <span class=\"n\">PosixPath</span><span class=\"p\">(</span><span class=\"s1\">&#39;/glade/work/dll/SIF_GPP/data.globalecology.unh.edu/data/GOSIF-GPP_v2/Monthly/Mean/GOSIF_GPP_2000.M04_Mean.tif&#39;</span><span class=\"p\">),</span>\n <span class=\"n\">PosixPath</span><span class=\"p\">(</span><span class=\"s1\">&#39;/glade/work/dll/SIF_GPP/data.globalecology.unh.edu/data/GOSIF-GPP_v2/Monthly/Mean/GOSIF_GPP_2000.M05_Mean.tif&#39;</span><span class=\"p\">),</span>\n <span class=\"n\">PosixPath</span><span class=\"p\">(</span><span class=\"s1\">&#39;/glade/work/dll/SIF_GPP/data.globalecology.unh.edu/data/GOSIF-GPP_v2/Monthly/Mean/GOSIF_GPP_2000.M06_Mean.tif&#39;</span><span class=\"p\">)]</span>\n\n<span class=\"n\">In</span> <span class=\"p\">[</span><span class=\"mi\">7</span><span class=\"p\">]:</span> <span class=\"c1\"># Loop over the first 4 files for testing purposes</span>\n\n<span class=\"n\">In</span> <span class=\"p\">[</span><span class=\"mi\">8</span><span class=\"p\">]:</span> <span class=\"n\">dsets</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n\n<span class=\"n\">In</span> <span class=\"p\">[</span><span class=\"mi\">37</span><span class=\"p\">]:</span> <span class=\"k\">for</span> <span class=\"n\">file</span> <span class=\"ow\">in</span> <span class=\"n\">files</span><span class=\"p\">[:</span><span class=\"mi\">4</span><span class=\"p\">]:</span>\n    <span class=\"o\">...</span><span class=\"p\">:</span>     <span class=\"n\">da</span> <span class=\"o\">=</span> <span class=\"n\">xr</span><span class=\"o\">.</span><span class=\"n\">open_rasterio</span><span class=\"p\">(</span><span class=\"n\">file</span><span class=\"p\">)</span>\n    <span class=\"o\">...</span><span class=\"p\">:</span>     <span class=\"n\">dsets</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">da</span><span class=\"p\">)</span>\n\n<span class=\"n\">In</span> <span class=\"p\">[</span><span class=\"mi\">38</span><span class=\"p\">]:</span> <span class=\"n\">ds</span> <span class=\"o\">=</span> <span class=\"n\">xr</span><span class=\"o\">.</span><span class=\"n\">concat</span><span class=\"p\">(</span><span class=\"n\">dsets</span><span class=\"p\">,</span> <span class=\"n\">dim</span><span class=\"o\">=</span><span class=\"s1\">&#39;new_dim&#39;</span><span class=\"p\">)</span>\n</pre></div>",
        "id": 21711,
        "sender_full_name": "Anderson Banihirwe",
        "timestamp": 1605658314
    },
    {
        "content": "<p>The resulting <code>ds</code> looks like:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"n\">In</span> <span class=\"p\">[</span><span class=\"mi\">39</span><span class=\"p\">]:</span> <span class=\"n\">ds</span>\n<span class=\"n\">Out</span><span class=\"p\">[</span><span class=\"mi\">39</span><span class=\"p\">]:</span>\n<span class=\"o\">&lt;</span><span class=\"n\">xarray</span><span class=\"o\">.</span><span class=\"n\">DataArray</span> <span class=\"p\">(</span><span class=\"n\">new_dim</span><span class=\"p\">:</span> <span class=\"mi\">4</span><span class=\"p\">,</span> <span class=\"n\">band</span><span class=\"p\">:</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"n\">y</span><span class=\"p\">:</span> <span class=\"mi\">3600</span><span class=\"p\">,</span> <span class=\"n\">x</span><span class=\"p\">:</span> <span class=\"mi\">7200</span><span class=\"p\">)</span><span class=\"o\">&gt;</span>\n<span class=\"n\">array</span><span class=\"p\">([[[[</span><span class=\"mi\">65535</span><span class=\"p\">,</span> <span class=\"mi\">65535</span><span class=\"p\">,</span> <span class=\"mi\">65535</span><span class=\"p\">,</span> <span class=\"o\">...</span><span class=\"p\">,</span> <span class=\"mi\">65535</span><span class=\"p\">,</span> <span class=\"mi\">65535</span><span class=\"p\">,</span> <span class=\"mi\">65535</span><span class=\"p\">],</span>\n         <span class=\"p\">[</span><span class=\"mi\">65535</span><span class=\"p\">,</span> <span class=\"mi\">65535</span><span class=\"p\">,</span> <span class=\"mi\">65535</span><span class=\"p\">,</span> <span class=\"o\">...</span><span class=\"p\">,</span> <span class=\"mi\">65535</span><span class=\"p\">,</span> <span class=\"mi\">65535</span><span class=\"p\">,</span> <span class=\"mi\">65535</span><span class=\"p\">],</span>\n         <span class=\"p\">[</span><span class=\"mi\">65535</span><span class=\"p\">,</span> <span class=\"mi\">65535</span><span class=\"p\">,</span> <span class=\"mi\">65535</span><span class=\"p\">,</span> <span class=\"o\">...</span><span class=\"p\">,</span> <span class=\"mi\">65535</span><span class=\"p\">,</span> <span class=\"mi\">65535</span><span class=\"p\">,</span> <span class=\"mi\">65535</span><span class=\"p\">],</span>\n         <span class=\"o\">...</span><span class=\"p\">,</span>\n         <span class=\"p\">[</span><span class=\"mi\">65535</span><span class=\"p\">,</span> <span class=\"mi\">65535</span><span class=\"p\">,</span> <span class=\"mi\">65535</span><span class=\"p\">,</span> <span class=\"o\">...</span><span class=\"p\">,</span> <span class=\"mi\">65535</span><span class=\"p\">,</span> <span class=\"mi\">65535</span><span class=\"p\">,</span> <span class=\"mi\">65535</span><span class=\"p\">],</span>\n         <span class=\"p\">[</span><span class=\"mi\">65535</span><span class=\"p\">,</span> <span class=\"mi\">65535</span><span class=\"p\">,</span> <span class=\"mi\">65535</span><span class=\"p\">,</span> <span class=\"o\">...</span><span class=\"p\">,</span> <span class=\"mi\">65535</span><span class=\"p\">,</span> <span class=\"mi\">65535</span><span class=\"p\">,</span> <span class=\"mi\">65535</span><span class=\"p\">],</span>\n         <span class=\"p\">[</span><span class=\"mi\">65535</span><span class=\"p\">,</span> <span class=\"mi\">65535</span><span class=\"p\">,</span> <span class=\"mi\">65535</span><span class=\"p\">,</span> <span class=\"o\">...</span><span class=\"p\">,</span> <span class=\"mi\">65535</span><span class=\"p\">,</span> <span class=\"mi\">65535</span><span class=\"p\">,</span> <span class=\"mi\">65535</span><span class=\"p\">]]],</span>\n\n\n       <span class=\"p\">[[[</span><span class=\"mi\">65535</span><span class=\"p\">,</span> <span class=\"mi\">65535</span><span class=\"p\">,</span> <span class=\"mi\">65535</span><span class=\"p\">,</span> <span class=\"o\">...</span><span class=\"p\">,</span> <span class=\"mi\">65535</span><span class=\"p\">,</span> <span class=\"mi\">65535</span><span class=\"p\">,</span> <span class=\"mi\">65535</span><span class=\"p\">],</span>\n         <span class=\"p\">[</span><span class=\"mi\">65535</span><span class=\"p\">,</span> <span class=\"mi\">65535</span><span class=\"p\">,</span> <span class=\"mi\">65535</span><span class=\"p\">,</span> <span class=\"o\">...</span><span class=\"p\">,</span> <span class=\"mi\">65535</span><span class=\"p\">,</span> <span class=\"mi\">65535</span><span class=\"p\">,</span> <span class=\"mi\">65535</span><span class=\"p\">],</span>\n         <span class=\"p\">[</span><span class=\"mi\">65535</span><span class=\"p\">,</span> <span class=\"mi\">65535</span><span class=\"p\">,</span> <span class=\"mi\">65535</span><span class=\"p\">,</span> <span class=\"o\">...</span><span class=\"p\">,</span> <span class=\"mi\">65535</span><span class=\"p\">,</span> <span class=\"mi\">65535</span><span class=\"p\">,</span> <span class=\"mi\">65535</span><span class=\"p\">],</span>\n         <span class=\"o\">...</span><span class=\"p\">,</span>\n         <span class=\"p\">[</span><span class=\"mi\">65535</span><span class=\"p\">,</span> <span class=\"mi\">65535</span><span class=\"p\">,</span> <span class=\"mi\">65535</span><span class=\"p\">,</span> <span class=\"o\">...</span><span class=\"p\">,</span> <span class=\"mi\">65535</span><span class=\"p\">,</span> <span class=\"mi\">65535</span><span class=\"p\">,</span> <span class=\"mi\">65535</span><span class=\"p\">],</span>\n</pre></div>",
        "id": 21712,
        "sender_full_name": "Anderson Banihirwe",
        "timestamp": 1605658344
    },
    {
        "content": "<p>Thanks <span class=\"user-mention\" data-user-id=\"13\">@Anderson Banihirwe</span>! I'll try that out.</p>",
        "id": 21713,
        "sender_full_name": "Danica Lombardozzi",
        "timestamp": 1605659592
    },
    {
        "content": "<p>Of course! Let me know how it goes.. I don't know how much memory you have access to, but it looks like you need at least 10GB to load all 200+ files in memory...  or you could chunk the files (which will allow you to take advantage of dask's parallelism) by changing this line </p>\n<div class=\"codehilite\"><pre><span></span><span class=\"n\">da</span> <span class=\"o\">=</span> <span class=\"n\">xr</span><span class=\"o\">.</span><span class=\"n\">open_rasterio</span><span class=\"p\">(</span><span class=\"n\">file</span><span class=\"p\">)</span>\n</pre></div>\n\n\n<p>to </p>\n<div class=\"codehilite\"><pre><span></span><span class=\"n\">da</span> <span class=\"o\">=</span> <span class=\"n\">xr</span><span class=\"o\">.</span><span class=\"n\">open_rasterio</span><span class=\"p\">(</span><span class=\"n\">file</span><span class=\"p\">,</span> <span class=\"n\">chunks</span><span class=\"o\">=</span><span class=\"p\">{})</span>\n</pre></div>",
        "id": 21714,
        "sender_full_name": "Anderson Banihirwe",
        "timestamp": 1605659937
    },
    {
        "content": "<p>Oh, thanks! Do I specify a value in <code>chunks={}</code>, or does leaving it open also work?</p>",
        "id": 21715,
        "sender_full_name": "Danica Lombardozzi",
        "timestamp": 1605660693
    },
    {
        "content": "<p>Leaving <code>chunks={}</code> open works too. Each file will be loaded in a single chunk of <code>~ 50MB</code></p>",
        "id": 21731,
        "sender_full_name": "Anderson Banihirwe",
        "timestamp": 1605726554
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"14\">@Matt Long</span> : I am circling back to trying to figure out regridding using the information you provided here but still having trouble.  I am trying to use the <code>latlon_to_scrip</code> function you wrote (from <a href=\"https://github.com/matt-long/krill-cesm-le/blob/75d749197e2754f3bd6c2a714866816b56822d3a/notebooks/util.py#L292\" target=\"_blank\" title=\"https://github.com/matt-long/krill-cesm-le/blob/75d749197e2754f3bd6c2a714866816b56822d3a/notebooks/util.py#L292\">https://github.com/matt-long/krill-cesm-le/blob/75d749197e2754f3bd6c2a714866816b56822d3a/notebooks/util.py#L292</a>), but when I apply it to my data, I get an error message.</p>\n<div class=\"codehilite\"><pre><span></span>ds\n&lt;xarray.DataArray (sif_gpp: 216, band: 1, y: 3600, x: 7200)&gt;\ndask.array&lt;shape=(216, 1, 3600, 7200), dtype=uint16, chunksize=(1, 1, 3600, 7200)&gt;\nCoordinates:\n  * band     (band) int64 1\n  * y        (y) float64 89.97 89.92 89.88 89.83 ... -89.83 -89.88 -89.93 -89.98\n  * x        (x) float64 -180.0 -179.9 -179.9 -179.8 ... 179.8 179.9 179.9 180.0\nDimensions without coordinates: sif_gpp\nAttributes:\n    transform:   (0.05, 0.0, -180.0, 0.0, -0.05, 90.0)\n    crs:         +init=epsg:4326\n    res:         (0.05, 0.05)\n    is_tiled:    1\n    nodatavals:  (nan,)\n\n\n\nlatlon_to_scrip(ds.x, ds.y)\n\n---------------------------------------------------------------------------\nValueError                                Traceback (most recent call last)\n&lt;ipython-input-40-a2db51e14aae&gt; in &lt;module&gt;\n----&gt; 1 latlon_to_scrip(ds.x, ds.y)\n\n&lt;ipython-input-39-4e3c68adb9d8&gt; in latlon_to_scrip(nx, ny, lon0, grid_imask, file_out)\n     27     dx = 360. / nx\n     28     dy = 180. / ny\n---&gt; 29     lat = np.arange(-90. + dy / 2., 90., dy)\n     30     lon = np.arange(lon0 + dx / 2., lon0 + 360., dx)\n     31\n\n~/miniconda/envs/analysis/lib/python3.7/site-packages/xarray/core/common.py in __bool__(self)\n     80\n     81     def __bool__(self):\n---&gt; 82         return bool(self.values)\n     83\n     84     # Python 3 uses __bool__, Python 2 uses __nonzero__\n\nValueError: The truth value of an array with more than one element is ambiguous. Use a.any() or a.all()\n</pre></div>\n\n\n<p>Any idea what is going wrong here? </p>\n<p>Also, do you have any examples of applying this function and then regridding high resolution data? I'm not confident that I'll know how to apply the mask properly once it's created.</p>",
        "id": 22882,
        "sender_full_name": "Danica Lombardozzi",
        "timestamp": 1607636862
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"74\">@Danica Lombardozzi</span>, the function signature for <code>latlon_to_scrip</code> expects <code>nx</code> and <code>ny</code>, which are number of  of grid cells in the x and y directions, respectively. It looks to me like you are passing in <code>x</code> and <code>y</code> themselves.</p>",
        "id": 22883,
        "sender_full_name": "Matt Long",
        "timestamp": 1607638428
    },
    {
        "content": "<p>Here's a hi-res-regridding weigh generation step:<br>\n<a href=\"https://github.com/marbl-ecosys/forcing-Fe-sedflux/blob/mom6-dev/notebooks/esmf_gen_weights_etopo1_to_POP.pbs\" target=\"_blank\" title=\"https://github.com/marbl-ecosys/forcing-Fe-sedflux/blob/mom6-dev/notebooks/esmf_gen_weights_etopo1_to_POP.pbs\">https://github.com/marbl-ecosys/forcing-Fe-sedflux/blob/mom6-dev/notebooks/esmf_gen_weights_etopo1_to_POP.pbs</a></p>",
        "id": 22884,
        "sender_full_name": "Matt Long",
        "timestamp": 1607638594
    },
    {
        "content": "<p>Thanks <span class=\"user-mention\" data-user-id=\"14\">@Matt Long</span> . I was able to get the <code>latlon_to_scrip</code> function to work and create the files. I've submitted a script similar to the example you shared to generate the weights. </p>\n<p>Assuming this works, I'm still not sure how to to apply these weights using the xESMF regridder. The documentation shows <code>xe.Regridder(grid_in, grid_out, method)</code>, with options to reuse and clean weights, but I don't see an option to use or specify a weights file. Do you know how to do this or have an example? Thanks!</p>",
        "id": 22924,
        "sender_full_name": "Danica Lombardozzi",
        "timestamp": 1607644907
    },
    {
        "content": "<p>My latest incarnation of this is here:<br>\n<a href=\"https://github.com/marbl-ecosys/forcing-Fe-sedflux/blob/mom6-dev/notebooks/preliminary_MOM6_forcing.ipynb\" target=\"_blank\" title=\"https://github.com/marbl-ecosys/forcing-Fe-sedflux/blob/mom6-dev/notebooks/preliminary_MOM6_forcing.ipynb\">https://github.com/marbl-ecosys/forcing-Fe-sedflux/blob/mom6-dev/notebooks/preliminary_MOM6_forcing.ipynb</a></p>\n<p>Relying on a module <a href=\"https://github.com/marbl-ecosys/forcing-Fe-sedflux/blob/mom6-dev/notebooks/regrid_tools/core.py\" target=\"_blank\" title=\"https://github.com/marbl-ecosys/forcing-Fe-sedflux/blob/mom6-dev/notebooks/regrid_tools/core.py\">regrid_tools</a></p>\n<p>Again, not well documented...but I think you can probably follow reasonably well.</p>",
        "id": 22928,
        "sender_full_name": "Matt Long",
        "timestamp": 1607645077
    },
    {
        "content": "<p>Thanks! I'll give it a shot tomorrow -- hopefully the script to create the weights will be done by then!</p>",
        "id": 22930,
        "sender_full_name": "Danica Lombardozzi",
        "timestamp": 1607645259
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"14\">@Matt Long</span> Thanks for all your help so far. I'm still struggling with the <code>regrid</code> function from your regrid_tools module and was hoping you can point me in the right direction. I created the <code>src</code>, <code>dst</code>, and <code>weights</code> files, but I think I'm likely specifying the inputs for <code>regrid</code> incorrectly.  Note that the <code>src</code> (<a href=\"http://sifgrid_latlon_0.05x0.05_180W.nc\" target=\"_blank\" title=\"http://sifgrid_latlon_0.05x0.05_180W.nc\">sifgrid_latlon_0.05x0.05_180W.nc</a>) and <code>dst</code> (<a href=\"http://CESM_latlon_1x1_180W.nc\" target=\"_blank\" title=\"http://CESM_latlon_1x1_180W.nc\">CESM_latlon_1x1_180W.nc</a>) files are here: /glade/work/dll/esmlab-regrid and the <code>weights</code> file is here: /glade/work/dll/esmlab-regrid/weights.</p>\n<div class=\"codehilite\"><pre><span></span>ds\n\n&lt;xarray.DataArray (sif_gpp: 216, band: 1, y: 3600, x: 7200)&gt;\ndask.array&lt;shape=(216, 1, 3600, 7200), dtype=uint16, chunksize=(1, 1, 3600, 7200)&gt;\nCoordinates:\n  * band     (band) int64 1\n  * y        (y) float64 89.97 89.92 89.88 89.83 ... -89.83 -89.88 -89.93 -89.98\n  * x        (x) float64 -180.0 -179.9 -179.9 -179.8 ... 179.8 179.9 179.9 180.0\nDimensions without coordinates: sif_gpp\nAttributes:\n    transform:   (0.05, 0.0, -180.0, 0.0, -0.05, 90.0)\n    crs:         +init=epsg:4326\n    res:         (0.05, 0.05)\n    is_tiled:    1\n    nodatavals:  (nan,)\n\nregrid_dir = f&#39;/glade/work/dll/esmlab-regrid/weights&#39;\nsrc_grid   = &#39;sifgrid_latlon_0.05x0.05_180W&#39;\ndst_grid   = &#39;CESM_latlon_1x1_180W&#39;\nmethod     = &#39;conserve&#39;\n\nsif_1deg = regridder.regrid(ds, renormalize=True, apply_mask=True)\nsif_1deg\n\n---------------------------------------------------------------------------\nTypeError                                 Traceback (most recent call last)\n&lt;ipython-input-19-828097d1ff00&gt; in &lt;module&gt;\n      2 # https://github.com/marbl-ecosys/forcing-Fe-sedflux/blob/mom6-dev/notebooks/preliminary_MOM6_forcing.ipynb\n      3\n----&gt; 4 sif_1deg = regridder.regrid(ds, renormalize=True, apply_mask=True)\n      5 sif_1deg\n\nTypeError: regrid() missing 1 required positional argument: &#39;obj&#39;\n</pre></div>\n\n\n<p>I also tried </p>\n<div class=\"codehilite\"><pre><span></span>grid_file  = &#39;sifgrid_latlon_0.05x0.05_180W_to_CESM_latlon_1x1_180W_conservative.nc&#39;\nregridder  = regrid_utils.regridder(src_grid, dst_grid, method, clobber=False)\n---------------------------------------------------------------------------\nAttributeError                            Traceback (most recent call last)\n&lt;ipython-input-22-31fc67c0dae3&gt; in &lt;module&gt;\n      1 grid_file  = &#39;sifgrid_latlon_0.05x0.05_180W_to_CESM_latlon_1x1_180W_conservative.nc&#39;\n----&gt; 2 regridder  = regrid_utils.regridder(src_grid, dst_grid, method, clobber=False)\n\n/glade/work/dll/CTSM_py/ctsm_py/regrid_utils.py in __init__(self, src_grid, dst_grid, method, clobber)\n    126     def __init__(self, src_grid, dst_grid, method=&#39;bilinear&#39;, clobber=False):\n    127\n--&gt; 128         self.src_grid_file = src_grid.grid_file\n    129         self.dst_grid_file = dst_grid.grid_file\n    130         self.method = method\n\nAttributeError: &#39;str&#39; object has no attribute &#39;grid_file&#39;\n</pre></div>\n\n\n<p>I used this code as an example: <a href=\"https://github.com/marbl-ecosys/forcing-Fe-sedflux/blob/mom6-dev/notebooks/preliminary_MOM6_forcing.ipynb\" target=\"_blank\" title=\"https://github.com/marbl-ecosys/forcing-Fe-sedflux/blob/mom6-dev/notebooks/preliminary_MOM6_forcing.ipynb\">https://github.com/marbl-ecosys/forcing-Fe-sedflux/blob/mom6-dev/notebooks/preliminary_MOM6_forcing.ipynb</a></p>\n<p>Where am I going wrong?</p>",
        "id": 23165,
        "sender_full_name": "Danica Lombardozzi",
        "timestamp": 1608143310
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"74\">@Danica Lombardozzi</span>, sorry, I probably won't have time to get back to you until the New Year.</p>",
        "id": 23320,
        "sender_full_name": "Matt Long",
        "timestamp": 1608588685
    }
]