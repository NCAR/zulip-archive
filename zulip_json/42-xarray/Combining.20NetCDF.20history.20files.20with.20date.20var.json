[
    {
        "content": "<p>Hi, I could really use some help understanding whether there is an efficient way to combine history files along the time dimension, where the time information is in another variable.    I have a whole lot of history files, so efficiency is a concern.</p>\n<p>Here is what one of the NetCDF history files looks like when opened with Xarray:</p>\n<div class=\"codehilite\"><pre><span></span>&lt;xarray.Dataset&gt;\nDimensions:  (ilev: 33, lat: 192, lev: 32, lon: 288, slat: 191, slon: 288, time: 1)\nCoordinates:\n  * lon      (lon) float32 0.0 1.25 2.5 3.75 5.0 ... 355.0 356.2 357.5 358.8\n  * slon     (slon) float32 -0.625 0.625 1.875 3.125 ... 354.4 355.6 356.9 358.1\n  * lat      (lat) float32 -90.0 -89.06 -88.12 -87.17 ... 87.17 88.12 89.06 90.0\n  * slat     (slat) float32 -89.53 -88.59 -87.64 -86.7 ... 87.64 88.59 89.53\n  * lev      (lev) float32 3.643 7.595 14.36 24.61 ... 936.2 957.5 976.3 992.6\n  * ilev     (ilev) float32 2.255 5.032 10.16 18.56 ... 947.4 967.5 985.1 1e+03\nDimensions without coordinates: time\nData variables: (12/15)\n    hyam     (lev) float32 0.003643 0.007595 0.01436 ... 0.006255 0.001989 0.0\n    hybm     (lev) float32 0.0 0.0 0.0 0.0 0.0 ... 0.9251 0.9512 0.9743 0.9926\n    hyai     (ilev) float32 0.002255 0.005032 0.01016 ... 0.003979 0.0 0.0\n    hybi     (ilev) float32 0.0 0.0 0.0 0.0 0.0 ... 0.9389 0.9636 0.9851 1.0\n    gw       (lat) float32 3.382e-05 0.0002705 0.000541 ... 0.0002705 3.382e-05\n    P0       float32 1e+05\n    ...       ...\n    Q        (time, lev, lat, lon) float64 ...\n    CLDLIQ   (time, lev, lat, lon) float64 ...\n    CLDICE   (time, lev, lat, lon) float64 ...\n    PS       (time, lat, lon) float64 6.853e+04 6.853e+04 ... 9.963e+04\n    date     (time) int32 20110103\n    datesec  (time) int32 0\nAttributes:\n    creation_date:          YYYY MM DD HH MM SS = 2019 07 10 01 31 17\n    model:                  CAM\n</pre></div>\n\n\n<p>The actual time value for this file is found in a variable called date, a length-1 integer array.    </p>\n<p>If I try to open a bunch of these files with open_mfdataset(), is there a way to create a time coordinate axis from these files in that step?   Or is it better to use the intake-esm catalog mechanism of preprocessing each file in order to combine these files into a Zarr store?</p>",
        "id": 32534,
        "sender_full_name": "Brian Bonnlander",
        "timestamp": 1621966756
    },
    {
        "content": "<p>sepcify<code>concat_dim=\"time\"</code>? or <code>concat_dim=\"date\"</code>? What have you tried?</p>",
        "id": 32539,
        "sender_full_name": "Deepak Cherian",
        "timestamp": 1621967216
    },
    {
        "content": "<p>I'll try them both; I didn't know what options I had.   Thanks!</p>",
        "id": 32540,
        "sender_full_name": "Brian Bonnlander",
        "timestamp": 1621967322
    },
    {
        "content": "<p>OK. If you want to convert <code>date</code> to a proper datetime thing, you'll need to pass a <code>preprocess</code> function that does so.</p>",
        "id": 32541,
        "sender_full_name": "Deepak Cherian",
        "timestamp": 1621967416
    },
    {
        "content": "<p>Maybe the preprocess step will fix this, but choosing either concat_dim option results in:</p>\n<div class=\"codehilite\"><pre><span></span># Create a dataset and drop all but one variable.\nwith dask.config.set(**{&#39;array.slicing.split_large_chunks&#39;: False}):\n    ds = xr.open_mfdataset(file_list, data_vars=&#39;minimal&#39;, coords=&#39;minimal&#39;, compat=&#39;override&#39;, concat_dim=&#39;time&#39;)\n\n...\nValueError: Could not find any dimension coordinates to use to order the datasets for concatenation\n</pre></div>\n\n\n<p>I would presume that the <code>preprocess</code> function could set the time coordinate value and fix this.</p>",
        "id": 32542,
        "sender_full_name": "Brian Bonnlander",
        "timestamp": 1621967657
    },
    {
        "content": "<p><code>combine=\"nested\"</code>? if the list of files is in the right order...</p>",
        "id": 32543,
        "sender_full_name": "Deepak Cherian",
        "timestamp": 1621967823
    },
    {
        "content": "<p>That worked!    Thanks very much for the help!   </p>\n<div class=\"codehilite\"><pre><span></span># Create a dataset and drop all but one variable.\nwith dask.config.set(**{&#39;array.slicing.split_large_chunks&#39;: False}):\n    ds = xr.open_mfdataset(file_list, data_vars=&#39;minimal&#39;, coords=&#39;minimal&#39;, compat=&#39;override&#39;, concat_dim=&#39;time&#39;, combine=&#39;nested&#39;)\n\nprint(ds)\n\n&lt;xarray.Dataset&gt;\nDimensions:  (ilev: 33, lat: 192, lev: 32, lon: 288, slat: 191, slon: 288, time: 6)\nCoordinates:\n  * lon      (lon) float32 0.0 1.25 2.5 3.75 5.0 ... 355.0 356.2 357.5 358.8\n  * slon     (slon) float32 -0.625 0.625 1.875 3.125 ... 354.4 355.6 356.9 358.1\n  * lat      (lat) float32 -90.0 -89.06 -88.12 -87.17 ... 87.17 88.12 89.06 90.0\n  * slat     (slat) float32 -89.53 -88.59 -87.64 -86.7 ... 87.64 88.59 89.53\n  * lev      (lev) float32 3.643 7.595 14.36 24.61 ... 936.2 957.5 976.3 992.6\n  * ilev     (ilev) float32 2.255 5.032 10.16 18.56 ... 947.4 967.5 985.1 1e+03\nDimensions without coordinates: time\nData variables: (12/15)\n    hyam     (lev) float32 dask.array&lt;chunksize=(32,), meta=np.ndarray&gt;\n    hybm     (lev) float32 dask.array&lt;chunksize=(32,), meta=np.ndarray&gt;\n    hyai     (ilev) float32 dask.array&lt;chunksize=(33,), meta=np.ndarray&gt;\n    hybi     (ilev) float32 dask.array&lt;chunksize=(33,), meta=np.ndarray&gt;\n    gw       (lat) float32 dask.array&lt;chunksize=(192,), meta=np.ndarray&gt;\n    P0       float32 ...\n    ...       ...\n    Q        (time, lev, lat, lon) float64 dask.array&lt;chunksize=(1, 32, 192, 288), meta=np.ndarray&gt;\n    CLDLIQ   (time, lev, lat, lon) float64 dask.array&lt;chunksize=(1, 32, 192, 288), meta=np.ndarray&gt;\n    CLDICE   (time, lev, lat, lon) float64 dask.array&lt;chunksize=(1, 32, 192, 288), meta=np.ndarray&gt;\n    PS       (time, lat, lon) float64 dask.array&lt;chunksize=(1, 192, 288), meta=np.ndarray&gt;\n    date     (time) int32 dask.array&lt;chunksize=(1,), meta=np.ndarray&gt;\n    datesec  (time) int32 dask.array&lt;chunksize=(1,), meta=np.ndarray&gt;\n</pre></div>",
        "id": 32544,
        "sender_full_name": "Brian Bonnlander",
        "timestamp": 1621968377
    }
]